#include <bits/stdc++.h>
using namespace std;
#define int long long
#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define FastHoviBaby ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);
 
 
int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }
 
 
int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}
 
 
bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}
 
 
int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}
 
 
bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}
vector<vector<int>> dp;
int n;
 
int check(int p, int flip, vector<int>& a){
    if(p>=n){
        
        return 0;
    }
   
	cout<<p<<" f "<<flip<<" "<<dp[p][flip]<<endl;
   
    if( dp[p][flip]!=-1)  { 
 
        return dp[p][flip];
    }
 
   
 
    if(flip==0){
        int s=0, s2=0;;
        if(a[p]==1) s=1;
        if(p+1<n && a[p+1]==1) s2=s+1; 
        else s2=s;
        
         dp[p][flip]= min( s+ check(p+1, 1,  a),  (s2)+check(p+2, 1, a));
    }
    else{
     dp[p][flip]= min(check(p+1, 0, a), check(p+2, 0,  a));
    }
 
    return dp[p][flip];
 
}
 
 
int32_t main(){
FastHoviBaby
 
 
int t=1;
cin>>t;
while(t--){
    
    
    cin>>n;
    dp.assign(n+2, vector<int>(2, -1));
 
    vector<int> a(n+1);
    rep(i,n){
        cin>>a[i];
    }
    int x=check(0,0,a);
    
    rep(i,7){
    	rep(j,2){
    		cout<<dp[i][j]<<" ";
    	}cout<<endl;
    }
 
    cout<<x<<endl;
 
}
return 0;
}
