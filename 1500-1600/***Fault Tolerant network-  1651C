#include <bits/stdc++.h>
using namespace std;
#define int long long
#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define FastHoviBaby ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);


int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }


int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}


bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}


int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}


bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}

int32_t main(){
FastHoviBaby


int t=1;
cin>>t;
while(t--){
    int n;
    cin>>n;

    int a[n], b[n];
    rep(i,n) cin>>a[i];
    rep(i,n) cin>>b[i];

    int mi= min(abs(a[0]-b[n-1])+ abs(b[0]- a[n-1]), abs(a[0]-b[0])+abs(a[n-1]- b[n-1]));


    int m1=INT_MAX, m2= INT_MAX;

    int le=-1, re=-1;
    for(int i=0;i<n;i++){

        if(m1> abs(a[0]-b[i])){
         le=i;   
        m1=min( abs(a[0]-b[i]), m1);
        }
    }  
    for(int i=n-1;i>=0;i--){
        if(m2> abs(a[n-1]-b[i])){
        m2= min (abs(a[n-1]-b[i]), m2);  
            re=i;
        }  
    }
 
    int m3=INT_MAX, m4=INT_MAX;
    int le2=-1, re2=-1;
    
    for(int i=0;i<n;i++){
        if(m3> abs(b[0]-a[i])){

        m3=min(abs(b[0]-a[i]), m3);
        le2=i;
        }
    }
     for(int i=n-1;i>=0;i--){
        if(m4> abs(b[n-1]-a[i])){
        m4= min(abs(b[n-1]-a[i]), m4);   
        re2=i;
        } 
    }


    if((le!=-1 && le==le2 && le==0) || (m1==m3 && abs(a[0]-b[0])==m1 )){
        mi= min(mi, m1+m2+m4);
    }else if( (re!=-1 && re==re2 && re==n-1) || (m2==m4 && abs(a[n-1]-b[n-1])==m2  )){
        mi= min(mi, m1+m2+m3);
    }else

    mi= min(mi, m1+m2+m3+m4);

    mi=min(mi,  abs(a[0]-b[0])+m2+m4);

    mi=min(mi, m1+abs(a[n-1]-b[n-1])+m3);

    mi= min(mi, abs(a[0]-b[n-1])+ m2+ m3);

    mi= min(mi, abs(a[n-1]- b[0])+ m1+m4);

    cout<<mi<<endl;

}
return 0;
}
