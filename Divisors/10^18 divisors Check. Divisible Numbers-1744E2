Here, mul = k*x*y, or (k*x*y)%mul ==0

Now, Ex = mul=6 and k=2, x=3, y=4.

So, we can say that mul= k1*x1*x2 *k2 *y1*y2.



#include <bits/stdc++.h>
using namespace std;
#define int long long
#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define Jhunjhar_Hova ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);


int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }


int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}


bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}


int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}


bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}

int32_t main(){
Jhunjhar_Hova


int t=1;
cin>>t;
while(t--){
    
    int a,b,c,d;
    cin>>a>>b>>c>>d;

    int mul= (a*b);

    vector<pair<int,int>> af,bf;
     for(int i=1;i*i<=a; i++){
        if(a%i == 0){
            af.pb({i, a/i} );
            af.pb({a/i, i});
        }
    }
    for(int i=1;i*i<=b; i++){
        if(b%i == 0){
            bf.pb({i, b/i} );
            bf.pb({b/i, i});
        }
    }





    int x=-1, y=-1;


     rep(i, af.size()){
        rep(j, bf.size()){

            int now= mul;    
            int xx= af[i].ff * bf[j].ff;
            int yy= af[i].ss * bf[j].ss;


            if( d -(d%xx)> b){


                    now/= xx;

                    if(c- (c%now) > a){
                        x= c- (c%now);
                        y= d -(d%xx);
                        break;
                    }

            }
         
        }
        if(x!=-1 && y!=-1) break;
     }
       

    cout<<x<<" "<<y<<endl;
    
}
return 0;
}
