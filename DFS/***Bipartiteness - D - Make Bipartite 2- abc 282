#include <bits/stdc++.h>
using namespace std;
#define int long long
#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define Jhunjhar_Hova ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);


int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }


int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}


bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}


int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}


bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}
int flag;
vector<int> a;
vector<vector<int>> adj; 
vector<bool> vis;
int nc, oc;

void dfs(int n, int val){

    if(a[n]!=0){
        if(a[n]!=val) flag=1;
        return;
    }
     a[n]= val;
     if(val==-1) nc++;
     else oc++;
    //  if(par != parent && n!=par){
    //     if(a[n]==-1) nc++;
    //     else oc++;
    //  }

    // vis[n]=true;

    for(auto i: adj[n]){
        dfs(i, (val==1 ? -1: 1));
    }

}
int32_t main(){
Jhunjhar_Hova

int n,m;
cin>>n>>m;
    flag=0;
   adj.assign(n+1, vector<int>{});

    set<pair<int,int>> s;
    // vector<bool> vis;
   rep(i,m){
    int x,y;
    cin>>x>>y;
        adj[x].pb(y);
        adj[y].pb(x);

        s.insert({x,y});
        s.insert({y,x});
   } 
    a.assign(n+1, 0);

     int mx= ((n)*(n-1))/2 - m;
    vector<pair<int,int>> ans;
    
    for(int i=1;i<=n; i++){
        if(a[i]==0) {
            nc=0, oc=0;
            dfs(i, 1);
            ans.pb({oc, nc});    

            mx-= (nc*(nc-1))/2;
            mx-= (oc*(oc-1))/2;
        }
    }


    if(flag){
        cout<<0;
        return 0;
    }
    cout<<mx;


return 0;
}
