#include <bits/stdc++.h>
using namespace std;
#define int long long
#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define Jhunjhar_Hova ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);


int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }


int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}


bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}


int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}


bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}
int lol=-1;


string without_zero(string &s, int k){
    int n=s.size();
    
        
    lol=k;
    k = min(k, n);

    stack<char> st;
    rep(i, n){
        if(st.empty() || k==0 || st.top()<=s[i] ){
            st.push(s[i]);
        }else{
            while(!st.empty() && k>0 && st.top()>s[i]){
                k--;
                lol--;
                st.pop();
            }
            st.push(s[i]);
        }
    }

    

    string ans="";
    while(!st.empty()){
        ans+=st.top();
        st.pop();
    }
    reverse(all(ans));
    return ans;

}

int32_t main(){
Jhunjhar_Hova


int t=1;
cin>>t;
while(t--){
     
    string s;
    cin>>s;
    int k;
    cin>>k;
    if(k==0){
        cout<<s<<endl;
        continue;
    }

    int f1=-1;
    int n=s.size();
    rep(i,n){
        if(s[i]=='0') {
            f1=i;
            break;
        }
    }

    int remain= n-k;

    int mi=1e10, index=-1;
    rep(i, k+1){
        if(s[i]!='0' && (s[i]-'0')<mi){
            mi= s[i]-'0';
            index=i;
        }
    }

    string ans="";
    ans+= (mi+'0');

    string right= "";
    for(int i=index+1; i<n;i++) right+=s[i];

    lol=-1;
    string now= without_zero(right, k- index);

    ans+=now;
    if(lol==0){
        cout<<ans<<endl;
        continue;
    }
    int p= ans.size();
    p-=lol;
    p=max((int)1, p);

    rep(i, p) cout<<ans[i];
    cout<<endl;
   

}
return 0;
}
