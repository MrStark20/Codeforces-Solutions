Same thing as deletion, here we make them pair that are not in LCS, by providing 1 frequency of each such.


#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define ll long long

class Solution {
public:
    int minInsertions(string s) {
        
        string s1=s;
        reverse(all(s1));
        int n=s.size();
        
        vector<vector<int>> dp(n+1, vector<int>(n+1, 0));
        
        for(int i=1;i<=n;i++){
            for(int j=1;j<=n;j++){
                if(s[i-1]== s1[j-1])
                    dp[i][j]= 1+ dp[i-1][j-1];
                
                else
                    dp[i][j]= max(dp[i-1][j], dp[i][j-1]);
            }
        }
        
        return (n-dp[n][n]);
    }
};
