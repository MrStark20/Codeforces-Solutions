#include <bits/stdc++.h>
using namespace std;
#define int long long
#define pi (3.141592653589)
#define mod 1000000007
#define int long long
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define FastHoviBaby ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);


int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }


int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}


bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}


int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}


bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}

int32_t main(){
FastHoviBaby

int n,m;
cin>>n>>m;
     char a[n][m];
     rep(i,n){
         rep(j,m){
             cin>>a[i][j];
         }
     }

    int flag=0;
    int ceni=0, cenj=0;
     rep(i,n){
         rep(j,m){
             if(a[i][j]=='*' &&i>0 && a[i-1][j]=='*' && i+1<n && a[i+1][j]=='*' && j>0 && a[i][j-1]=='*' && j+1<m && a[i][j+1]=='*'){
             flag=1;  ceni=i; cenj=j;
              break;
             }
         } if(flag) break;
     }

   

     if(!flag) {cout<<"NO"; return 0;}
     int flag2=0;

     
     for(int i=ceni; i<n;i++){
         if(a[i][cenj]=='*') a[i][cenj]='.';
         else break;
     }
     for(int i=ceni-1;i>=0; i--){
         if(a[i][cenj]=='*') a[i][cenj]='.';
         else break;
     }
     for(int j=cenj+1;j<m;j++){
         if(a[ceni][j]=='*') a[ceni][j]='.';
         else break;
     }
     for(int j=cenj-1;j>=0;j--){
         if(a[ceni][j]=='*') a[ceni][j]='.';
         else break;
     }
 

    rep(i,n){
         rep(j,m){
            if(a[i][j]!='.') flag2=1; 
         } 
          if(flag2) break;
     }


     if(flag2) cout<<"NO";
     else cout<<"YES";

return 0;
}
