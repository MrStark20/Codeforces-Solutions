#include <bits/stdc++.h>
using namespace std;
#define int long long
#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define Jhunjhar_Hova ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);


int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }


int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}


bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}


int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}


bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}

int32_t main(){
Jhunjhar_Hova


int t=1;
cin>>t;
while(t--){
    
    int n;
    cin>>n;

    vector<int> a(n), ac(n);
    rep(i,n) cin>>a[i], ac[i]=a[i];

     vector<int> b(n), bc(n);
    rep(i,n) cin>>b[i], bc[i]=b[i];

    sort(all(ac)); sort(all(bc));

    map<pair<int,int>, int> m;

    rep(i,n){
        m[mp(ac[i], bc[i])]++;
    }

    int flag=0;
    rep(i,n){
        pair<int,int> l {a[i], b[i]};

        if(m.find(l)==m.end()){
            flag=1;
            break;
        }
        m[l]--;
    }

    if(flag){
        cout<<-1<<endl;
        continue;
    }

    
    map<int, pair<int,int>> m1;
    map<pair<int,int> , set<int>> m2;

    vector<pair<int,int>> ans;

    rep(i,n){

         pair<int,int> l {a[i], b[i]};
        m1[i]= l;
        m2[l].insert(i);

    }

    rep(i,n){
        if(ac[i]!=a[i] || bc[i]!=b[i]){

             pair<int,int> l {ac[i], bc[i]};

             auto it= m2[l].upper_bound(i); 

             

             int x=*it;
             ans.pb(mp(i, x));

             swap(a[i], a[x]);
             swap(b[i], b[x]);

             pair<int,int> lulu;
             lulu= m1[i];
             m1[*it]=lulu;
             m1[i]=l;

             m2[lulu].erase(i);
             m2[lulu].insert(x);

             m2[l].erase(x);
             m2[l].insert(i);   

        }
    }

    cout<<ans.size()<<endl;
    rep(i,ans.size()){
        cout<<ans[i].ff+1<<" "<<ans[i].ss+1<<endl;
    }

}
return 0;
}
