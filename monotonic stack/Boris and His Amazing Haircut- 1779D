#include <bits/stdc++.h>
using namespace std;
#define int long long
#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define Jhunjhar_Hova ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);


int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }


int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}


bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}


int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}


bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}

int32_t main(){
Jhunjhar_Hova


int t=1;
cin>>t;
while(t--){
    
    int n;
    cin>>n;

    vector<int> a(n), b(n);
    int flag=0;
    rep(i,n) cin>>a[i];
    rep(i,n) cin>>b[i];
    rep(i,n){
        if(a[i]<b[i]) flag=1;
    }

    map<int,int> f;
    int m; cin>>m;
    rep(i,m){
        int x;
        cin>>x;
        f[x]++;
    }

    if(flag){
        cout<<"NO"<<"\n";
        continue;
    }

    stack<pair<int,int>> s;
    map<int,int> ch;

    rrep(i,n){
        if(s.empty()){
            s.push({b[i], a[i]});
        }else{
            if(b[i] == s.top().ff){
                if(a[i]-b[i]!=0 && s.top().ff-s.top().ss ==0){
                    s.pop();
                    s.push({b[i], a[i]});
                   
                }
                 continue;
            }
            else if(b[i]< s.top().ff ){
                s.push({b[i],a[i]});
            }
            else if(b[i]>s.top().ff){

                while(!s.empty() && s.top().ff<b[i]){

                    pair<int,int> now= s.top();
                    s.pop();
                    if(now.ss>now.ff) ch[now.ff]++;
                }

                if(!s.empty() && s.top().ff==b[i]){
                    if(a[i]-b[i]!=0 && s.top().ff-s.top().ss ==0){
                    s.pop();
                    s.push({b[i], a[i]});
                  }
                }
                else
                s.push({b[i], a[i]});

            }
        }
    }

    while(!s.empty()){
        pair<int,int> now= s.top();
        s.pop();
        if(now.ss>now.ff) ch[now.ff]++;
    }


    for(auto i: ch){
        if(f.find(i.ff)== f.end()) { flag=1; break; }
        if(f[i.ff] < i.ss ) { flag=1; break; }
    }

    if(flag) cout<<"NO"<<"\n";
    else cout<<"YES"<<"\n";
}
return 0;
}
