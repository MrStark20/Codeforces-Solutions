#include <bits/stdc++.h>
using namespace std;
#define int long long
#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define FastHoviBaby ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);


int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }


int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}


bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}


int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}


bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}

int32_t main(){
FastHoviBaby


int t=1;
cin>>t;
while(t--){
    
    int n;
    cin>>n;

    string s;
    cin>>s;

    int pd[n], pk[n];
    if(s[0]=='D') pd[0]=1, pk[0]=0;
    else pk[0]=1, pd[0]=0;

    for(int i=1;i<n;i++){
        if(s[i]=='D') pd[i]=pd[i-1]+1;
        else pd[i]=pd[i-1];

        if(s[i]=='K') pk[i]= pk[i-1]+1;
        else pk[i]=pk[i-1];
    }

    map<pair<int,int>, int> m;
    map<int, int> m2;

    rep(i,n){
       
      
        int x= gcd(pd[i], pk[i]);
        if(x>0){
            pd[i]/=x; pk[i]/=x;
        }

        pair<int,int> p;
        p.ff= pd[i];
        p.ss= pk[i];

        m[p]++;
        m2[i+1]= m[p];
    }

    rep(i,n){
         pair<int,int> p;
        p.ff= pd[i];
        p.ss= pk[i];
        int y=pd[i]+ pk[i];

        if(m2[i+1]>= 2){
            cout<<m2[i+1]<<" ";
        }else
        cout<<1<<" ";
    } 
   
    cout<<endl;
}
return 0;
}
