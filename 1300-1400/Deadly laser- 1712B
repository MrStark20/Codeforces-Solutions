#include <bits/stdc++.h>
using namespace std;
#define int long long
#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define Jhunjhar_Hova ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);
 
 
int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }
 
 
int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}
 
 
bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}
 
 
int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}
 
 
bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}
int n,m;
vector<vector<int>> g;
vector<vector<bool>> vis;
 
int dis(int i, int j, int x, int y){
    int k= abs(x-i)+ abs(j-y);
    // cout<<k<<endl;
    return k;
}
 
 
 
 
int32_t main(){
Jhunjhar_Hova
 
 
int t=1;
cin>>t;
while(t--){
    int x,y, d;
    cin>>n>>m>>x>>y>>d;
    
 
    int lr=0,dc=0;

    for(int i=1;i<=n;i++){
        if(abs(x-i)+ (y-1) <=d ) { lr=1; break;}
    }

    for(int i=1;i<=m;i++){
        if(abs(n-x)+ abs(y-i) <=d ) { dc=1; break;}
    }

    if(dc==0 && lr==0) {
        cout<< (n+m-2)<<endl;
        continue;
    }

    int rr=0,uc=0;
     for(int i=1;i<=n;i++){
        if(abs(x-i)+ (m-y) <=d ) { rr=1; break;}
    }
    for(int i=1;i<=m;i++){
        if(abs(x-1)+ abs(y-i) <=d ) { uc=1; break;}
    }
    if(uc==0 && rr==0) { 
        cout<< (n+m-2)<<endl;
        continue;
    }

    cout<<-1<<endl;
    
}
return 0;
}
