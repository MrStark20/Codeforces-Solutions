#include <bits/stdc++.h>
using namespace std;
#define int long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define FastHoviBaby ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);


int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }


int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}


bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}


int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}


bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}

int32_t main(){
FastHoviBaby

int n,m;
cin>>n>>m;

    int a[n][m];
    memset(a, 0, sizeof a);
    rep(i,n){
        int x;
        cin>>x;
        if(x==0) a[i][0]=2;
        else 
        rep(j,x)
        a[i][j]=-1;
    }
   

    rep(i,m){
        int x=0;
        cin>>x;

        if(x<n & (a[x][i]==-1 ) ){
            cout<<0; return 0;
        }
        if(x==0 && a[0][i]==-1)  { cout<<0; return 0;}

              
       
            rep(j,x){
                if(a[j][i]==2 ) { cout<<0; return 0;}
                else if( (i>0 && a[j][i-1]==-1 && a[j][i]!=-1) ) {
                    
                    int f1=0; 
             for(int k=i-1;k>=0;k--){ if(a[j][k]==0 || a[j][k]==2) {f1=1; break;}}
                    if(!f1){
                     cout<<0; return 0;}
                     }

                a[j][i]=-1;
            }
    }    
        



    int ans=1;
    for(int i=1;i<n;i++){
        for(int j=1;j<m;j++){
            if( (a[i-1][j]!=0 || a[i][j-1]!=0) && a[i][j]==0){
             int f1=0, f2=0; 
             if( a[i-1][j]==0) f1=1;
             if( a[i][j-1]==0 ) f2=1; 
              for(int k=i-1;k>=0;k--){ if(a[k][j]==0) {f1=1; break;}}  
             for(int k=j-1;k>=0;k--){ if(a[i][k]==0 || a[i][k]==2) {f2=1; break;}} 

            if(f1 && f2) {  
            ans= (ans*2)%mod;   
            }
          }
            else if(a[i-1][j]==0 && (a[i][j-1]==0 ) && a[i][j]==0){
                 ans= (ans*2)%mod;
            }
        }
    }
    cout<<ans%mod;

return 0;
}
