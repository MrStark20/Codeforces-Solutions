#include <bits/stdc++.h>
using namespace std;
#define int long long
#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define FastHoviBaby ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);


int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }


int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}


bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}


int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}


bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}
vector<int> a(1e5+1, 0);
int n;

vector<int> dp(1e5+1, 0);


int32_t main(){
FastHoviBaby


cin>>n;

    for(int i=1;i<=n;i++) cin>>a[i];
    if(n==1){
        cout<<1;
        return 0;
    }
    

        for(int i=(a[1]==1? 2 : 1) ; i<=n; i++){
            int mx=INT_MIN;
            if(gcd(a[i], a[i-1])!=1)
                mx=max( mx, 1+dp[a[i-1]]);

            for(int j=2; j*j<=a[i]; j++){
                if(a[i] % j ==0){
                    if(j!= a[i]/j){
                        dp[j]=1+dp[j];
                        dp[a[i]/j]= 1+dp[a[i]/j];

                        mx= max(mx, max(dp[j], dp[a[i]/j]));
                    }else{
                         dp[j]=1+dp[j];  
                         mx= max(mx, dp[j]); 
                    }
                }
            }

            for(int j=2; j*j<=a[i]; j++){
                if(a[i] % j ==0){
                    if(j!= a[i]/j){
                        dp[j]=mx;
                        dp[a[i]/j]= mx;

                      
                    }else{
                         dp[j]=mx; 
                    }
                }
            }
            
            dp[a[i]]=max((int)1, mx);
        }
    

    int mx2=INT_MIN;
    for(int i=1; i<=1e5;i++) mx2=max(mx2, dp[i]);

    cout<<mx2;
    

return 0;
}
