#include <bits/stdc++.h>
using namespace std;
#define int long long
#define ll long long
#define pi (3.141592653589)
#define mod1 1000000007
#define mod2 1000000009
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define Jhunjhar_Hova ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);


int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }

int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}

bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}


int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}


bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}

int32_t main(){
Jhunjhar_Hova

int n;
cin>>n;

    string s;
    cin>>s;

    //hashing ??

    vector<vector<int>> hashp(n*2 + 1, vector<int>(2, 0));
    vector<vector<int>> hashs(n*2 + 1, vector<int>(2, 0));

    vector<int> pw1(2*n+1, 1), pw2(2*n+1, 1);
    vector<int> inv1(2*n+1, 1), inv2(2*n+1, 1);

    int p=31;

    for(int i=1; i<= 2*n; i++){
        pw1[i] = (pw1[i-1] * p)%mod1;
        if(pw1[i]<0) pw1[i]+=mod1;

        pw2[i]= (pw2[i-1]*p)%mod2;
        if(pw2[i]<0) pw2[i]+=mod2;
    }

    ll m_inv1= modp(p, mod1-2, mod1);
    ll m_inv2= modp(p, mod2-2, mod2);

    for(int i=1;i<=2*n; i++){
        inv1[i]= (inv1[i-1] * m_inv1)%mod1;
        if(inv1[i]<0) inv1[i]+=mod1;

        inv2[i]= (inv2[i-1] * m_inv2)%mod2;
        if(inv2[i]<0) inv2[i]+=mod2;
    }

    rep(i, 2*n){
        hashp[i][0] = ((i>0? hashp[i-1][0] : 0 )+ (pw1[i]* ((s[i]-'a')+1))%mod1)%mod1;
        if(hashp[i][0]<0) hashp[i][0]+=mod1;

        hashp[i][1] = ((i>0? hashp[i-1][1] : 0 )+ (pw2[i]* ((s[i]-'a')+1))%mod2)%mod2;
        if(hashp[i][1]<0) hashp[i][1]+=mod2;
    }

    ll f= 2*n;
    rrep(i, f){
        hashs[i][0]= ((i+1<f ? hashs[i+1][0] : 0) + (pw1[f-1-i] * ((s[i]-'a')+1))%mod1)%mod1;
        if(hashs[i][0]<0) hashs[i][0]+=mod1;

        hashs[i][1]= ((i+1<f ? hashs[i+1][1] : 0 ) + (pw2[f-1-i]* ((s[i]-'a')+1))%mod2)%mod2; 
        if(hashs[i][1]<0) hashs[i][1]+=mod2;

    }

    string ans=""; int index=-1;

    rep(i, n+1){

        ll left1= (i>0 ? hashp[i-1][0] : 0)%mod1;
        ll left2= (i>0 ? hashp[i-1][1] : 0)%mod2;

        ll right1= ((  hashp[f-1][0] - (i+n-1>=0 ? hashp[i+n-1][0]: 0))%mod1 * inv1[i+n])%mod1 ;
        if(right1<0) right1+=mod1;
        right1= (right1 * pw1[i])%mod1;
        

        

        ll right2= ((  hashp[f-1][1] - (i+n-1>=0 ? hashp[i+n-1][1]: 0))%mod2 * inv2[i+n]) %mod2;
        if(right2<0) right2+=mod2;
        right2= (right2 * pw2[i])%mod2;
        

        

        ll t1= (left1+ right1)%mod1;
        if(t1<0) t1+=mod1;

        ll t2= (left2+ right2)%mod2;
        if(t2<0) t2+=mod2;

        ll cen1= ((hashs[i][0] - (i+n<f ? hashs[i+n][0] : 0 ))%mod1 * inv1[f- (n+i) ])%mod1 ;
        ll cen2= ((hashs[i][1] - (i+n<f ? hashs[i+n][1] : 0 ))%mod2 * inv2[f- (n+i) ])%mod2 ;

        if(cen1<0) cen1+=mod1;
        if(cen2<0) cen2+=mod2;

        if(t1==cen1 && t2==cen2){
            index= i;
            break;
        }

    }

    if(index==-1){
        cout<<-1;
    }else {
        string lol= s.substr(index, n);
        reverse(all(lol)); 
        cout<<lol<<"\n"<<index;
    }






return 0;
}
