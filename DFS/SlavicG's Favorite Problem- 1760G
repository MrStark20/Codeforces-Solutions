#include <bits/stdc++.h>
using namespace std;
#define int long long
#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define Jhunjhar_Hova ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);


int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }


int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}


bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}


int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}


bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}

int flag=0;
map<int,int> m2;
vector<bool> vis;

void dfs(int n, int par, vector<vector<int>> &adj, map<pair<int,int>,int> &m1, map<int,int> &m, int b, int xr ){

    if(m.find(xr)!=m.end() ){
        flag=1;
        return;
    }
    vis[n]=true;
    m2[xr]++;

    for(auto i: adj[n]){
        if(i!=par && i!=b){
            dfs(i, n, adj, m1, m, b, xr^m1[{i,n}]);
        }
        vis[i]=true;
    }

}

void dfs2(int n, int par, vector<vector<int>> &adj, map<pair<int,int>,int> &m1, map<int,int> &m2, int xr,int b ){

    if(m2.find(xr)!= m2.end() && n!=b){
        flag=1;
        return;
    }

    for(auto i: adj[n]){
        if( i!=par){
            dfs2(i, n, adj, m1, m2, xr^m1[{i,n}], b );
        }
    }
}

int32_t main(){
Jhunjhar_Hova


int t=1;
cin>>t;
while(t--){
    int n,a,b;
    cin>>n>>a>>b;

    m2.clear();
    map<int,int> m;
    map<pair<int,int>,int> m1;

    vector<vector<int>> adj(n+1, vector<int>{});
    vis.assign(n+1, false);

    rep(i, n-1){
        int x,y, w;
        cin>>x>>y>>w;

        adj[x].pb(y);
        adj[y].pb(x);
        m1[{x,y}]=w;
        m1[{y,x}] = w;
        if(x==b || y==b) m[w]++;
    }
    flag=0;
    dfs(a,-1,adj, m1, m, b, 0);
    if(flag){
        cout<<"YES"<<endl;
        continue;
    }

    dfs2(b, -1, adj, m1, m2, 0, b);

    if(flag) cout<<"YES"<<endl;
    else cout<<"NO"<<endl;





}
return 0;
}
