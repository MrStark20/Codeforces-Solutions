#include <bits/stdc++.h>
using namespace std;
#define int long long
#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define FastHoviBaby ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);


int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }


int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}


bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}


int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}


bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}

int32_t main(){
FastHoviBaby


int t=1;
cin>>t;
while(t--){
    
    int n,m;
    cin>>n>>m;

    string s;
    cin>>s;

   
    int mxl=INT_MIN, mxr=INT_MIN;
   
   set<int> h;

   int pos=0;
   h.insert(0);

   rep(i,s.size()){
       if(s[i]=='L') {
           pos-=1, h.insert(pos);
           if(h.size()>m) {h.erase(pos); break;}
       }

       if(s[i]=='R') {
           pos+=1; h.insert(pos);
           if(h.size()>m) {h.erase(pos); break;}
       }


   }

    int count=0;
   for(auto i:h) {
       count++;
       if(i==0) break;

      // cout<<i<<endl;
   }
    
    set<int> v;
    pos=0;
   v.insert(0);

     rep(i,s.size()){
       if(s[i]=='D') {
           pos+=1, v.insert(pos);
           if(v.size()>n) {v.erase(pos); break;}
       }

       if(s[i]=='U') {
           pos-=1; v.insert(pos);
           if(v.size()>n) {v.erase(pos); break;}
       }


   }

   int count2=0;
    for(auto i:v) {
       count2++;
       if(i==0) break;

   
   }

   cout<<count2<<" "<<count<<endl;
    


}
return 0;
}
