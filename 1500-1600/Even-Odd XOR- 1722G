#include <bits/stdc++.h>
using namespace std;
#define int long long
#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define Jhunjhar_Hova ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);


int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }


int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}


bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}


int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}


bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}

int32_t main(){
Jhunjhar_Hova


int t=1;
cin>>t;
while(t--){
    int n;
    cin>>n;
   
    int x=0;
    int start= 1;

    vector<int> ans(n+1, -1);

    int x1=0, x2=0;
    map<int,int>m;
  
    for(int i=1; i<=n; i+=2 ){
        ans[i]=start;
        m[ans[i]]++;
        x1^=ans[i];
        start+=2;
      }
      
    int last=-1;
    while(true){
        int lol=start,x2=0;
    for(int i=2;i<=n-2;i+=2){
        ans[i]=lol;
        x2^=ans[i];
        m[ans[i]]++;

        lol+=2;
    }

    last= (x1^x2);
    if(m.find(last)!=m.end()) start++;
    else break;
    }

    if(ans[n]==-1)
    ans[n]=last;
    else ans[n-1]=last;

    int xor1=0, xor2=0;
    for(int i=1;i<=n; i++){
        if(i%2==0) xor2^=ans[i];
        else xor1^=ans[i];
        cout<<ans[i]<<" ";
    }

    cout<<endl;

}
return 0;
}
