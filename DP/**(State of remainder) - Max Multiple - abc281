#include <bits/stdc++.h>
using namespace std;
#define int long long
#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define Jhunjhar_Hova ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);


int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }


int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}


bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}


int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}


bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}
vector<vector<vector<int>>> dp;

int recur(int i,  int rem, int k, vector<int> &a, int &d ){

        if(k==0) {
            if(rem!=0) return INT_MIN;
            return 0;
        }
            
        if(i==a.size() ) return INT_MIN;
        
        if(dp[i][rem][k]!=-1) return dp[i][rem][k];
        
        if(k>0)
            dp[i][rem][k] = max( a[i] + recur(i+1, (rem+a[i])%d, k-1, a, d), recur(i+1, rem ,k,a, d));
        else
            dp[i][rem][k]= recur(i+1, rem, k, a, d);
        
        return dp[i][rem][k];
} 

int32_t main(){
Jhunjhar_Hova

int n, k, d;
cin>>n>>k>>d;

    vector<int> a(n);
    rep(i,n) cin>>a[i];

    dp.assign(n+2, vector<vector<int>>(d+1,vector<int>(k+1, -1)));

    int x =recur(0, 0, k, a, d);
    
    cout<< (x<0 ? -1 : x) <<endl;

return 0;
}
