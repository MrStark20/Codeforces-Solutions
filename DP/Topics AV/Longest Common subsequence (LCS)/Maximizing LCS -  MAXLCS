#include <bits/stdc++.h>
using namespace std;
#define int long long
#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define Jhunjhar_Hova ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);


int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }


int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}


bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}


int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}


bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}

vector<vector<int>> dp;
int recur(int i, int j, string &a, string &b){
    if(i==a.size() || j==b.size() ){
        
        return 0;
    }
    if(dp[i][j]!=-1) return dp[i][j];
    
    if(a[i]==b[j]){
    dp[i][j]= 1+ recur(i+1, j+1, a,b);
    }else 
    dp[i][j]= max(recur(i, j+1, a, b), recur(i+1, j, a,b));
        
        return dp[i][j];
}

int32_t main(){
Jhunjhar_Hova


int t=1;
cin>>t;
while(t--){

    int n;
    cin>>n;
    string s;
    cin>>s;

    if(n==1){
        cout<<0<<endl;
        continue;
    }

    ll mx =0;

    string f= s;
    reverse(all(f));

    dp.assign(n+1, vector<int>(n+1, -1));

    mx= max(mx, recur(0, 0, s, f) );
    
    cout<<mx/2<<"\n";


}
return 0;
}
