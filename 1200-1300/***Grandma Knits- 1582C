#include <bits/stdc++.h>
using namespace std;
#define int long long
#define pi (3.141592653589)
#define mod 1000000007
#define int long long
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define FastHoviBaby ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);


int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }


int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}


bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}


int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}


bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}
bool isPali(string s){
    while(s.find('*')!=-1){
        s.erase(s.begin()+s.find('*'));
    }
    string res=s;
    reverse(all(res));
    return res==s;
}

int32_t main(){
FastHoviBaby


int t=1;
cin>>t;
while(t--){
    int n;
    cin>>n;
    string s;
    cin>>s;
    int flag=0, l=0, r=n-1,d1=0,d2=0,mi=INT_MAX;

    char op1=' ', op2=' ';
    while(l<=r){
        if(s[l]==s[r]) {
        l++;r--;
       } else {
            op1=s[l];
            op2=s[r];
            flag=1;
            break;
        }
    }
    if(!flag){
        cout<<0<<endl;
        continue;
    }
    vector<char> check(2); 
    check[0]=op1; check[1]=op2;
    

    rep(i,2){
        l=0,r=n-1, flag=0,d1=0;
        char x= check[i];
         while(r>=l){
             if(s[l]==s[r]) {
                 l++; r--;
             }else if(s[l]==x) {
                 l++; d1++;
             }else if(s[r]==x) {
                 r--; d1++;
             }else{ flag=1; break;}
         }
         if(!flag)
        mi=min(d1, mi);
    }
        if(mi==INT_MAX) cout<<-1<<endl;
        else cout<<mi<<endl; 


}
return 0;
}
