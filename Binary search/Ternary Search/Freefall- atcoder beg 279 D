////////////////////////// The root of this problem was needed to be an integer so we found mids as integers otherwise,...........


        The mid1 & mid2 will be found in doubles and (r-l > 0.00001) based on need

#include <bits/stdc++.h>
using namespace std;
#define int long long
#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define Jhunjhar_Hova ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);
 
 
int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }
 
 
int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}
 
 
bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}
 
 
int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}
 
 
bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}

double chor(int a, int no, int b){

     double y1= sqrt(no+1);
         double x1= ((ll)(a)/y1);
         double f= no;
         f*=b;
        x1+= (double)(f);

        return  x1;
}
 
int32_t main(){
Jhunjhar_Hova
 
int a,b;
cin>>a>>b;
 
    if(a<=b ){
        double x= 1.0*a;
        cout<<fixed<<setprecision(12)<<x;
        return 0;
    }
 
    int mi =a;
 
    long double l= 0, r= a;
 
    
 
    while(r-l>2){
 
       int m1=l+ (r-l)/3;int m2= r- (r-l)/3;
 

        double x1= chor(a, m1, b), x2= chor(a, m2, b);
 
        
 
         if(x1>x2) l=m1;
        else if(x1<x2) r=m2;
        else{
            l=m1;
            r=m2;
        }
 
    }
 
    vector<double> ans;

    for(int i=l; i<=r; i++){
        ans.pb(chor(a,i, b));
    }

    sort(all(ans));

    cout<<fixed<<setprecision(12)<<ans[0]<<endl;
 
return 0;
}
