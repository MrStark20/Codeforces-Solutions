#include <bits/stdc++.h>
using namespace std;
#define int long long
#define pi (3.141592653589)
#define mod 1000000007
#define int long long
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define FastHoviBaby ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);


int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }


int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}


bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}


int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}


bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}

int32_t main(){
FastHoviBaby


int t=1;
cin>>t;
while(t--){
    string a,s;
    cin>>a>>s;

     int flag=0;

    int i=a.size()-1,j=s.size()-1;
    string b="";
    stack<int> ans;

    while( i>=0 && j>=0){
      
         if(a[i]-'0' <= s[j]-'0'){
            int z=(s[j]-'0')-(a[i]-'0');
            ans.push(z);
            i--,j--;
        }
       else {
           int prev=s[j]-'0';
            j--;
            int now=s[j]-'0';
           int y= (10*now)+prev;
           int g=y-(a[i]-'0');
            if(g>9 || g<0 ) { flag=1; break;}
            ans.push(g);
            i--,j--;
        }
        
    }

    if(flag) {cout<<-1<<endl; continue;}
    else if(i>=0) {cout<<-1<<endl; continue;}
    
    while(j>=0){
        ans.push(s[j]-'0');
        j--;
    }
    
    while(!ans.empty()){
        int x= ans.top();
        ans.pop();
        string k=to_string(x);
        b+=k;
    }

    int bb=stoll(b);
    cout<<bb<<endl;
   

}
return 0;
}
