#include <bits/stdc++.h>
using namespace std;
#define int long long
#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define FastHoviBaby ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);
 
 
int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }
 
 
int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}
 
 
bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}
 
 
int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}
 
 
bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}
set<int> s;
int n,w;
vector<int> wei(105), val(105);
vector<vector<int>> dp(105, vector<int> (1e5+15, 1e18) );
const int mxx= 1e17;
 
 
 
int32_t main(){
FastHoviBaby
 
cin>>n>>w;
rep(i,n)
cin>>wei[i]>>val[i];
 
 
 
int mx=0;
 
    
 
    dp[1][0]=0;
    dp[1][val[0]]= wei[0];


 
    for(int i=2; i<=n; i++){
        dp[i][0]=0;
        for(int j=1;j <= 1e5; j++){
 
           
 
            if(val[i-1]<= j){
                dp[i][j]= min( wei[i-1] + dp[i-1][j-val[i-1]], dp[i-1][j] );
 
            }
            else{
                dp[i][j]= dp[i-1][j];
            }
            
               
        }
    }
 
    for(int i=1e5; i>=0; i--){
        if(dp[n][i]<=w){
            mx=i;
            break;
        }
    }
 
    cout<<mx;
 
 
return 0;
}
