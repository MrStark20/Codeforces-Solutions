#include <bits/stdc++.h>
using namespace std;
#define int long long
#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define Jhunjhar_Hova ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);


int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }


int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}


bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}


int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}


bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}
vector<int> dp;
vector<vector<int>> adj;

vector<int> avail;
vector<int> prb;

vector<int> a,b;

void dfs(int n, int par , vector<int> &prb){

if(par!=-1){

    int available= avail[par]+ a[n];
    avail[n]=available;
    if(prb.size()==0){
    prb.pb(b[n]);
    }else{
        int x=prb.back();
        prb.pb(b[n]+x);
    }

    auto count=upper_bound( all(prb), available);

    if(count== prb.end()){
        dp[n]=prb.size();
    }else{
        dp[n]= (count- prb.begin());
    } 

}

    for(auto i: adj[n]){
        if(i!=par){
            dfs(i, n, prb);
        }
    }

    if(prb.size()>0)
    prb.pop_back();
}


int32_t main(){
Jhunjhar_Hova


int t=1;
cin>>t;
while(t--){
    
    int n;
    cin>>n;

    dp.assign(n+1, 0);
    adj.assign(n+1, vector<int>());

    prb.clear();
    a.assign(n+1,0);
    b.assign(n+1, 0);
    avail.assign(n+1, 0);

    for(int i=2;i<=n; i++){
        int x,y,z;
        cin>>x>>y>>z;
        adj[i].pb(x);
        adj[x].pb(i);

        a[i]=y;
        b[i]=z;
    }
    avail[1]=0;
    dfs(1, -1, prb);

    for(int i=2;i<=n; i++)
    cout<<dp[i]<<" "; cout<<endl;  

}
return 0;
}
