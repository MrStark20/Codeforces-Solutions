#include <bits/stdc++.h>
using namespace std;
#define int long long
#define ll long long
#define pi (3.141592653589)
#define mod 998244353 
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define Jhunjhar_Hova ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);


int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }


int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}


bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}


int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}


bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}

int32_t main(){
Jhunjhar_Hova

vector<int> ifac(61, 1);

    for(int i=2;i<=60; i++)
        ifac[i]= ifac[mod % i] * (mod - mod/i)%mod;

    vector<int> rf(61,1);
        for(int i=2;i<=60; i++)
        rf[i]= (ifac[i] * rf[i-1])%mod;

    vector<int> fac(61,1);
        for(int i=2;i<=60;i++){
            fac[i]= (i*fac[i-1])%mod;
        }

vector<int> a(61), b(61);
a[2]=1;
b[2]=0;

    for(int i=4; i<=60; i+=2){
        int total = ((fac[i]* rf[i/2])%mod * rf[i/2])%mod;
        
            ////     n            r->inverse                (n - r)->inverse
            a[i]= ((fac[i-1]* rf[i/2])%mod * rf[ (i-1)-(i/2) ])%mod;
        
            a[i] = (a[i]+ b[i-2])%mod;
            if(a[i]<0) a[i]+=mod;
            b[i]= (total-(a[i]+1))%mod;
            if(b[i]<0) b[i]+=mod;
    }

int t=1;
cin>>t;
while(t--){
    int n;
    cin>>n;

   int x=a[n]%mod;
   int y=b[n]%mod;
   if(x<0)x+=mod;
    if(y<0) y+=mod;
   cout<<x<<" "<<y<<" "<<1<<endl;
}
return 0;
}
