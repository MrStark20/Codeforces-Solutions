#include <bits/stdc++.h>
using namespace std;
#define int long long
#define pi (3.141592653589)
#define mod 1000000007
#define int long long
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define FastHoviBaby ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);


int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }


int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}


bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}


int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}


bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}

int32_t main(){
FastHoviBaby


int t=1;
cin>>t;
while(t--){
    int n,s;
    cin>>n>>s;

    int a[n];
    multiset<int> m;
    int pre[n];
    int sum=0;
    rep(i,n){
        cin>>a[i];
        m.insert(a[i]);
        sum+=a[i];
    }
    if(sum<s){ cout<<0<<endl; continue; }
    pre[0]=a[0];
    for(int i=1;i<n;i++){
        pre[i]= pre[i-1]+a[i];
    }

    int ans=0,j=0,flag=0,f2=0,l=0;
    rrep(i,n){
        if(pre[i]>s){
            if(pre[i]-a[i]<=s){
                j=i;
                flag=1;
                break;
            }
            if(!flag){
                auto it= --m.end();
                if(pre[i]- *it<=s ){
                       f2=1;
                       j=*it; 
                       break;
                }
                
                m.erase(m.equal_range(a[i]).ff);    
            }
        }
    }

    
        if(!flag && !f2){
            cout<<0<<endl;
        }else if(flag){
            cout<<j+1<<endl;
        }else{
            rep(i,n){
                if(a[i]==j){
                    cout<<i+1<<endl;
                    break;
                }
            }
        } 



}
return 0;
}
