#include <bits/stdc++.h>
using namespace std;
#define int long long
#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define Jhunjhar_Hova ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);


int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }


int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}


bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}


int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}


bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}
vector<vector<int>> dp;
vector<vector<bool>> vis;
int recur(int i, int j, int n, vector<vector<int>> &g){

    if(i==n-1 && j==n-1){
        return g[i][j];
    }
    if(vis[i][j]) return -1e18-10;
    vis[i][j]=true;

    if(dp[i][j]!=-1) return dp[i][j];

    ll f= recur(i+1>=n ? 0: i+1, j, n, g );
     vis[i][j]=false;

    ll h= recur(i, j+1>=n ? 0: j+1, n ,g);
     vis[i][j]=false;

    ll now= g[i][j]+ max( f, h );

    // cout<<i<<" "<<j<< " -> "<<now<<endl;

   
      return  dp[i][j] = now;


}

int32_t main(){
Jhunjhar_Hova


    int n;
    cin>>n;

    vector<vector<int>> g(n+1, vector<int>(n+1));
    int sum=0;
    int mi=1e18;
    rep(i,n){
        rep(j,n){
            cin>>g[i][j];
            sum+=g[i][j];
           
        }
    }
    dp.assign(n+1, vector<int>(n+1, -1));
    vis.assign(n+1, vector<bool>(n+1, false));

    // int ans =recur(0,0, n, g );

    // rep(i,2){
    //     rep(j,2){
    //         cout<<dp[i][j]<<" ";
    //     }cout<<endl;
    // }
    vector<int> a;

   rep(i,n){
    mi=min(mi, g[i][n-i-1]);
   }

    // int x= *(min_element(all(g)));
    cout<<sum - mi<<endl;


return 0;
}
