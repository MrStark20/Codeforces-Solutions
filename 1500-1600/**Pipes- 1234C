#include <bits/stdc++.h>
using namespace std;
#define int long long
#define ll long long
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define FastHoviBaby ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);


int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }


int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}


bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}


int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}


bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}

int32_t main(){
FastHoviBaby


int t=1;
cin>>t;
while(t--){
    
    int n;
    cin>>n;

    vector<vector<int>> g( 3, vector<int>(n+4,0));

        g[1][1]=2;
        g[2][n+2]=2;
        string s;
        cin>>s;
        int e=2;
        for(int i=0; i<n;i ++){
            g[1][e]=(s[i]-'0'); e++;
        }
          cin>>s;
         e=2;
         for(int i=0; i<n;i ++){
            g[2][e]=(s[i]-'0'); e++;
        }
     

        int si=1, sj= 2;

         vector<vector<char>> now( 3, vector<char>(n+4,'.'));

         now[1][1]='*';

         int pi=1, pj=1;

         int flag=0;
         int heh=0;

        
        while(true){
            if(g[si][sj] <=2) { 
                if( pi==si && sj==pj+1){
                    now[si][sj]='*'; 
                    pi=si, pj=sj;
                    sj+=1;
                    
                } 
                else{
                    flag=1;
                    break;
                } 
                }
             else{
                 if(si-1==pi && sj==pj){
                     now[si][sj]='*'; 
                     pi=si,pj=sj;
                     sj++;
                 }
                 else if(pi==si+1 && pj==sj){
                     now[si][sj]='*'; 
                     pi=si; pj=sj;
                     sj++;
                 }
                 else if( sj-1==pj && si==pi){

                     now[si][sj]='*';
                     pi=si, pj=sj;
                     if(si==1)
                     si++;
                     else si--;
                 } 
                 
             }
             if(sj>= n+3) break; 
           
        }

      
        if(!(si==2 && sj==n+3) || flag) cout<<"NO"<<endl;
        else cout<<"YES"<<endl;
}
return 0;
}
