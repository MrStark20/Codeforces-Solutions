// don't check the condition directly for leaf i.e (adj[y].size()==1) because in case of tree (1-2) root will also get counted as a leaf.

#include <bits/stdc++.h>
using namespace std;
#define int long long
#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define Jhunjhar_Hova ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);


int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }


int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}


bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}


int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}


bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}

int32_t main(){
Jhunjhar_Hova


int t=1;
cin>>t;
while(t--){
    
    int n;
    cin>>n;

    vector<vector<int>> adj(n+1, vector<int>{});
    vector<int> val(n+1, 0);
    rep(i,n-1){
        int x,y;
        cin>>x>>y;
        adj[x].pb(y);
        adj[y].pb(x);
    }

    int q;
    cin>>q;

    int ans=0;
    // 0's count-1
    int zc=n;

    vector<int> dis(n+1, 1e10);

    queue<int> q1;
    q1.push(1);
    dis[1]=0;

    while(!q1.empty()){
        int x= q1.front();
        q1.pop();
        for(auto i: adj[x]){
            if(dis[i]> dis[x]+1){
                dis[i]=dis[x]+1;
                q1.push(i);
            }
        }
    }

    rep(i,q){
        int x;
        cin>>x;
        if(x==2){
            if(zc>0)
            cout<<zc-1<<endl;
            else cout<<n-1<<endl;
        }else{
            int y;
            cin>>y;
            if(val[y]==1) {continue; }


            
                int flag=0;
                rep(j, adj[y].size()){
                    if(dis[adj[y][j]]> dis[y] ){
                        if(val[adj[y][j]]==0) {flag=1; break;}
                    }
                }

                if(!flag){
                    zc--; val[y]=1;
                }

            

        }
    }


}
return 0;
}
