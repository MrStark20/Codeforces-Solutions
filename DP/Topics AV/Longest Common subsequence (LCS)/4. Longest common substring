Recursion

#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
class Solution{
    public:
    vector<vector<int>> dp;
    int longestCommonSubstr (string S1, string S2, int n, int m)
    {
        dp.assign(n+1, vector<int> (m+1, -1));
        
        int mx=0;
        
        rep(i,n){
            rep(j,m){
                mx=max(mx, recur(i,j,S1,S2));
            }
        }
        return mx;
    }
    
    int recur(int i, int j, string &s, string &t){
        if(i==s.size() || j==t.size())
        return 0;
        
        if(dp[i][j]!=-1) return dp[i][j];
        
        if(s[i]==t[j])
        dp[i][j]= 1+ recur(i+1, j+1, s, t) ;
        else
        dp[i][j]= 0;
        
        return dp[i][j];
        
    }
};




--------------------------------------
 int longestCommonSubstr (string S1, string S2, int n, int m)
    {
       vector<vector<int>> dp( n+1, vector<int>(m+1, 0) );
       int mx=INT_MIN;
       
       for(int i=1;i<=n;i++){
           for(int j=1; j<=m;j++){
               if(S1[i-1]==S2[j-1]){
                dp[i][j]=1+dp[i-1][j-1];
                mx=max(mx, dp[i][j]);
               }
                
                else
                dp[i][j]=0;
           }
       }
       
       return mx==INT_MIN? 0: mx;
    }
