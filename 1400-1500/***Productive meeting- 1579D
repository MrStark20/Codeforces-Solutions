#include <bits/stdc++.h>
using namespace std;
#define int long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define FastHoviBaby ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);


int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }


int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}


bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}


int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}


bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}

int32_t main(){
FastHoviBaby


int t=1;
cin>>t;
while(t--){
    int n;
    cin>>n;

    priority_queue<pair<int,int>> p;
    int a[n];
    rep(i,n){
        cin>>a[i];
       
        if(a[i]!=0)
        p.push( mp(a[i], i+1));
    }
    vector<pair<int,int>> v;    
    int count=0;
    while(p.size()>=2){
         pair<int,int> x=p.top();
        p.pop();
         pair<int,int> y=p.top();
        p.pop();
        if(x.ff==0) break;
       

        if(x.ff== y.ff && x.ff!=0 ){

            if(p.size()==0){  
           rep(i,x.ff)         
           v.pb( mp (x.ss, y.ss));  
           continue;
            } 
        }
        v.pb(mp (x.ss, y.ss));

        if(y.ff-1>0){
            p.push(mp(y.ff-1, y.ss));
        }
        if(x.ff-1>0)        
         p.push(mp(x.ff-1, x.ss));
           
         
    }

    cout<<v.size()<<endl;
    for(auto i: v) cout<<i.ff<<" "<<i.ss<<endl;
}
return 0;
}
