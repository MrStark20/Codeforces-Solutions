#include <bits/stdc++.h>
using namespace std;
#define int long long
#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define Jhunjhar_Hova ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);
 
 
int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }
 
 
int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}
 
 
bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}
 
 
int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}
 
 
bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}
 
int32_t main(){
Jhunjhar_Hova
 
 
int t=1;
cin>>t;
while(t--){
    
    int n, k;
    cin>>n>>k;
 
    vector<int> a(n);
    rep(i,n) cin>>a[i];

    int ans=0;
 
    

    rep(i,n) ans+=( a[i]/k);
 
    rep(i,n){
        int rem= a[i]%k;
        a[i]=rem;
            
      
    }
     set<pair<int,int>> s;
  
    
    sort(all(a));
    int sum=0, count=0;
    

    
    rep(i,n){
       
       int x= k-a[i];
       int flag=0;

        auto it= s.lower_bound(mp(x, 1));
            
         

            if( !(it==s.end()) ){
                pair<int,int> p= *it;
                 s.erase(*it);
           
               
           flag=1;

           
           if(p.ff==a[i]){
               if(p.ss<1 ) { flag=0;}
               else{
                   
                   ans++;
                   if(p.ss-1 !=0)
                   s.insert(mp(p.ff, p.ss - 1));
                  
               }
           
          } else{
               
               
               ans++;
               if(p.ss-1 !=0)
               s.insert(mp(p.ff, p.ss - 1));
               flag=1;
              
           }
       }
       
      
       if(!flag && a[i]!=0) {
           auto pt= s.lower_bound(mp(a[i], 0));
           if(pt==s.end() || (*pt).ff!= a[i]){
               s.insert(mp(a[i],1));
           }else{
               pair<int,int> pp= *pt;
            s.erase(*pt);
            s.insert(mp(a[i], pp.ss+1));
            
           
       }
       

    }
   
    }
 
    cout<<ans<<endl;

}
return 0;
}
