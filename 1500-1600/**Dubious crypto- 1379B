#include <bits/stdc++.h>
using namespace std;
#define int long long
#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define Jhunjhar_Hova ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);


int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }


int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}


bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}


int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}


bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}

int32_t main(){
Jhunjhar_Hova


int t=1;
cin>>t;
while(t--){
    
    int l,r,m;
    cin>>l>>r>>m;

    int left=1,right=1e11;

    int closest=1, bestn=1;

    int d=1e15;

    if(m<=r && m>=l){
        cout<<m<<" "<<l<<" "<<l<<endl;
        continue;
    }
    else if(m<=r){

        int f= l-m;

        cout<<l<<" "<<(l)<<" "<<l+f<<endl;
        continue;
               
    }

    int  mir=1e12,times=0, ans=-1;

    

    for(int i=l;i<=r;i++){

        int rem= m%i;
        int x=min(rem, i-rem);
        if(mir>x ){
            mir=x;
            closest=i;
            times= (rem<i-rem ? m/i : m/i +1  );
        } 
    }

       
    bestn=times;

    int dif= (bestn*closest) - m;
  
    if(dif>=0){
       int c=r;
       int b=r-dif;
       cout<<closest<<" "<<b<<" "<<c<<endl;
    }
    else{
        int b=r;
        int c= r- abs(dif);

        cout<<closest<<" "<<b<<" "<<c<<endl;
    }

}
return 0;
}
