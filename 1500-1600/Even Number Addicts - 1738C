#include <bits/stdc++.h>
using namespace std;
#define int int64_t
#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define Jhunjhar_Hova ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);
 
 
int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }
 
 
int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}
 
 
bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}
 
 
int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}
 
 
bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}
int dp[101][101][101][2];
bool recur(int a, int count, int even, int odd, int bit, int n){
    if(count==n){
        return ((a%2)==0);
    }
    if(dp[a][count][even][bit]!=-1) return dp[a][count][even][bit];
    
    bool flag=true;
    if(bit){
        if(even>0 && odd>0){
            flag =recur(a, count+1, even-1, odd, bit^1, n) | recur(a+1, count+1, even, odd-1, bit^1, n)  ;
        }
        else if(even>0){
            flag = recur(a, count+1, even-1, odd, bit^1, n);
        }
        else if(odd>0){
            flag=recur(a+1, count+1, even, odd-1, bit^1, n);
        }
    }
    else{
        if(even>0 && odd>0){
            flag = recur(a, count+1, even-1, odd, bit^1, n) & recur(a, count+1, even, odd-1, bit^1, n)  ;
        }
        else if(even>0){
            flag = recur(a, count+1, even-1, odd, bit^1, n);
        }
        else if(odd>0){
            flag=recur(a, count+1, even, odd-1, bit^1, n);
        }
    }
 
    return dp[a][count][even][bit]= flag;
}
 
int32_t main(){
Jhunjhar_Hova
 
 
 
int t=1;
cin>>t;
while(t--){
    
    int n;
    cin>>n;
    memset(dp, -1, sizeof dp);
    vector<int> a(n);
    int oc=0,ec=0;
    rep(i,n){
        cin>>a[i];
        if(a[i]%2) oc++;
        else ec++;
    }
 
    cout<<(recur(0,0, ec, oc, 1, n)== true ? "Alice" : "Bob")<<endl;
}
return 0;
}
