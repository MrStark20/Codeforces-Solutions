#include <bits/stdc++.h>
using namespace std;
#define int long long
#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define Jhunjhar_Hova ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);


int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }


int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}


bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}


int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}


bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}

int32_t main(){
Jhunjhar_Hova


int t=1;
cin>>t;
while(t--){
    
    int n,q;
    cin>>n>>q;

    vector<int> a(n+1);
    rep(i,n)cin>>a[i+1];

    int mxi=-1, mx=-1;
    for(int i=1;i<=n; i++){
        if(a[i]>mx){
            mx=a[i];
            mxi=i;
        }
    }
    
    int count=max((int)0, mxi-2);
    if(count==0){
        while(q--){
            int x,y;
            cin>>x>>y;

            if(x==mxi){
                
                cout<<y<<endl;
            }else cout<<0<<endl;
        }

        continue;
    }


    vector<int> round( count+1, -1);
    map<int,vector<int>> winner;

    int now=1;

    int prev=1;
    for(int i=2;i<mxi ;i++ ){
        if(a[prev]>a[i]){
            winner[prev].pb(now);
            round[now]=prev;    
        }
        else{
            winner[i].pb(now);
            round[now]=i;
            prev=i;
        }
        now++;
    }
    


    while(q--){
        int x,y;
        cin>>x>>y;

        if(x==mxi){
            cout<<max((int)0, y-count)<<endl;

        }else{
            if(winner.find(x)==winner.end()){
                cout<<0<<endl;
            }
            else{
            auto it=upper_bound(all(winner[x]), y);

            if(it==winner[x].end()) cout<<winner[x].size()<<endl;
            else{
                int f= it-winner[x].begin();
                cout<<f<<endl; 
            }
            }
        }


    }

}
return 0;
}
