#include <bits/stdc++.h>
using namespace std;
#define int long long
#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define Jhunjhar_Hova ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);


int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }


int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}


bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}


int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}


bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}
vector<vector<vector<ll>>> dp; 


int32_t main(){
Jhunjhar_Hova

    
    int n,m;
    cin>>n>>m;
    vector<vector<int>> g(n+1, vector<int>(m+1));
    rep(i,n){
        rep(j,m){
            cin>>g[i][j];
        }
    }

    dp.assign(n+1, vector<vector<ll>>(2, vector<ll>(2,1e8)));

    // dp[i+1][k][j] - (j=1 if i-1th row was flipped, k=1 if ith row was flipped) 

    //l=1 if row i+1 is flipped

    dp[0][0][0]=0;
    dp[0][1][0]=1;

    rep(i,n){
        rep(j, 2){
            rep(k, 2){
                rep(l,2){

                        int flag=0;
                        rep(f, m){

                            int f1=0;

                            if( i-1>=0 && ( g[i][f] ^ k ) == (g[i-1][f] ^ j) ) f1=1;
                            if( f+1<m && (g[i][f] ^k) == (g[i][f+1] ^k )) f1=1;
                            if( f-1>=0 &&  (g[i][f] ^k) == (g[i][f-1] ^k )) f1=1;
                            if( i+1<n &&  (g[i][f]^k)==(g[i+1][f] ^ l)  ) f1=1;

                            if(!f1) {flag=1; }
                        }
                        if(!flag){
                            dp[i+1][l][k] = min(dp[i+1][l][k], l+dp[i][k][j]);
                        }

                }
            }
        }
    }

    ll mi= 1e11;
    rep(i,2){
        rep(j,2){
            mi= min(mi, dp[n][i][j]);
        }
    }

    cout<< (mi==1e8 ? -1 : mi);




return 0;
}
