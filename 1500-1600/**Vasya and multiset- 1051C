#include <bits/stdc++.h>
using namespace std;
#define int long long
#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define FastHoviBaby ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);


int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }


int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}


bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}


int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}


bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}
int dp[101][101][101];
vector<int> a(101);
vector<int> ansa, ansb;


int32_t main(){
FastHoviBaby

int n;
cin>>n;
 


 rep(i,n){
     cin>>a[i];
 }
    map<int,int> m1;
    map<int,int> m2;
    map<int,int> m3;
    

    rep(i,n) m3[a[i]]++;

    int cou=0;
    vector<int> two;
    vector<int> three;
    for(auto i: m3){
        if(i.ss==2) {   two.pb(i.ff);}
        else if(i.ss>1) { cou++; three.pb(i.ff); }
    }

    int dist_a=0, dist_b=0, flag=0;

    vector<bool> vis(101, false);

    rep(i,n){
        if(m3[a[i]]!=1) continue;
        if(m3[a[i]]==2) continue;
       

        if(dist_a == dist_b  ){
            m1[a[i]]++;
            dist_a++;
        }else{
            m2[a[i]]++;
            dist_b++;
        }
    }

  

    if( abs(dist_a - dist_b)!=0 && cou==0){

        cout<<"NO"<<endl;
        return 0;
    }

    if(dist_a>dist_b){

            cout<<"YES"<<endl;
            int flag=0;
            rep(i,n){
                if(count(all(two), a[i])!=0 ){
                        if(m1[a[i]]==0){
                            cout<<'A'; m1[a[i]]=1;
                        } 
                        else
                        cout<<'B';
                }
                else if(m1[a[i]]==1) cout<<'A';
                else if(m2[a[i]]==1) cout<<'B';
                else{
                    if(!flag){
                        cout<<'B';
                        flag=1;
                    }else
                    cout<<'A';
                }
            }
        
      
    }
    else   if(dist_a < dist_b){

            cout<<"YES"<<endl;
             int flag=0;
            rep(i,n){
                if(count(all(two), a[i])!=0 ){
                        if(m1[a[i]]==0){
                            cout<<'A'; m1[a[i]]=1;
                        } 
                        else
                        cout<<'B';
                }
                else if(m1[a[i]]==1) cout<<'A';
                else if(m2[a[i]]==1) cout<<'B';
                else{
                    if(!flag){
                        cout<<'A';
                        flag=1;
                    }else
                    cout<<'B';
                }
            }
       
    }
    else{
        cout<<"YES"<<endl;
       

           rep(i,n){
               if(count(all(two), a[i])!=0 ){
                        if(m1[a[i]]==0){
                            cout<<'A'; m1[a[i]]=1;
                        } 
                        else
                        cout<<'B';
                }
                else if(m1[a[i]]==1) cout<<'A';
                else if(m2[a[i]]==1) cout<<'B';
                else cout<<'A';

            }
    }

    



return 0;
}
