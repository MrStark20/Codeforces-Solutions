#include <bits/stdc++.h>
using namespace std;
#define int long long
#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define Jhunjhar_Hova ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);


int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }


int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}


bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}


int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}


bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}

int32_t main(){
Jhunjhar_Hova


int t=1;
cin>>t;
while(t--){
    int n;
    cin>>n;
    vector<int> a(n);
    rep(i,n) cin>>a[i];

    int total_or= a[0];
    rep(i,n) total_or |= a[i];

    vector<vector<int>> d(n+1, vector<int>(31, 0) );

    vector<int> f(31, 0);

    rep(i,n){
        int x=a[i];

        while(x>0){
            int now= 31 - __builtin_clz(x);
            d[i][now]++;
            f[now]++;
            x-= (1<<now);
        }
    }

    int flag=0;
    rep(i, 31){
        if(f[i]==1){
            flag=1;
            break;
        }
    }


    

    if(flag){
        cout<<-1<<"\n";
        continue;
    }


    vector<vector<int>> pre(n+1, vector<int>(31, 0));
    rep(i, n){
        rep(j,31){
            pre[i][j]= (i-1>=0 ? pre[i-1][j] : 0) + d[i][j];
        }
    }

   
    int mx=-1;

    rep(i, n){
        int l=0, r= n-i+1;

        while(r-l>1){

            int m=(l+r)/2;
            int f2=0;

                int numb=0;

                int f1=0;
                for(int j=0; j<=30;j++){
                    int my= pre[i+m-1][j] - (i-1>=0 ? pre[i-1][j] : 0 );

                    if((my >= f[j] && f[j]>0) || (f[j]>0 && my==0) ) {
                        f1=1;
                        
                    }
                    if(my>0)
                    numb += (1ULL<<j);
                }
                

                if(numb!=total_or){
                l=m;
                continue;
                }


                if(!f1){
                    mx=max(mx, m);
                    l=m;
                }else r=m;


            }


        }

     

    cout<<mx<<"\n";


}
return 0;
}
