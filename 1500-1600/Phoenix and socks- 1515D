#include <bits/stdc++.h>
using namespace std;
#define int long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define FastHoviBaby ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);


int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }


int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}


bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}


int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}


bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}

int32_t main(){
FastHoviBaby


int t=1;
cin>>t;
while(t--){
    int n,l,r;
    cin>>n>>l>>r;

    map<int,int> ml;
    map<int,int> mr;
    vector<int> le;
    rep(i,l) {
        int x;
        cin>>x;
        le.pb(x); 
        ml[x]++;
    }
    vector<int> ri;
    rep(i,r){
        int x;
        cin>>x;
        ri.pb(x); 
        mr[x]++;
    } 
    int ans=0;

        int pair=0;
       if(l<=r){ 
        rep(i,l){
            if(mr[le[i]]>0){
                pair++;
                mr[le[i]]--;
                ml[le[i]]--;
                le[i]=-1;
            }
        }   
          rep(i,l){
              if(le[i]>=0) ans++;
          }
       }
       else{

            rep(i,r){
            if(ml[ri[i]]>0){
                pair++;
                mr[ri[i]]--;
                ml[ri[i]]--;
                ri[i]=-1;
            }
        }   
          rep(i,r){
              if(ri[i]>=0) ans++;
          }


       } 
   
    if(l==r){
          cout<<ans<<endl;
          continue;
    }

    vector<int> af;
    if(l>r){
        int need= l- n/2  , c=0;
        for(auto i: ml ){
            if(need<=0) break;

            if(i.ss>=2){
                 int have= i.ss/2;
                 c+=min(have,need);
                 need-=min(have,need);  
             
            }
        }

       
          ans= ans+(need*2)+c;
        
        cout<<ans<<endl;

    }
    else {

        int need= r- n/2 , c=0;
        for(auto i: mr ){
            if(need<=0) break;
            if(i.ss>=2){
                 int have= i.ss/2;
                 c+= min(have,need);
                 need-= min(have,need);  
             
            }
        }

        
            ans= ans+(need*2)+c;
        
        cout<<ans<<endl;    


    }

}
return 0;
}
