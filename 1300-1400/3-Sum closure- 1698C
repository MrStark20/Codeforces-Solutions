#include <bits/stdc++.h>
using namespace std;
#define int long long
#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define Jhunjhar_Hova ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);


int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }


int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}


bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}


int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}


bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}

int32_t main(){
Jhunjhar_Hova


int t=1;
cin>>t;
while(t--){
    int n;
    cin>>n;

    vector<int> a(n);
    map<int,int> m;
    int pc=0, nc=0,zc=0;
    rep(i,n) {
        cin>>a[i];
        m[a[i]]++;
        if(a[i]>0) pc++;
        else if(a[i]<0) nc++;
        else zc++;
    }

    
    if(n==3){
        int s= a[0]+a[1]+a[2];
        if(m[s]>0){
            cout<<"YES"<<endl;
        }else
        cout<<"NO"<<endl;

        continue;
    }
    if(zc==n){
        cout<<"YES"<<endl;
        continue;
    }
    if(pc>2  || nc>2){
        cout<<"NO"<<endl;
        continue;
    }

    vector<int> now;
    int flag=0;

    rep(i,n){
        if(a[i]>0)now.pb(a[i]);
        if(a[i]<0) now.pb(a[i]);
        if(a[i]==0 && !flag){
            now.pb(a[i]);
            flag=1;
        }
    }

    int ans=0;

    rep(i, now.size()){
        int s= now[i];
        for(int j=i+1; j<now.size();j++){
            int f=s;
            f+=now[j];
            for(int k=j+1; k<now.size(); k++){
                int g=f;
                g+=now[k];
                if(m[g]==0){
                ans=1;
                break;
              }
            }
            
        }
    }

    if(ans) cout<<"NO"<<endl;
    else cout<<"YES"<<endl;


}
return 0;
}
