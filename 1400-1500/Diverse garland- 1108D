#include <bits/stdc++.h>
using namespace std;
#define int long long
#define pi (3.141592653589)
#define mod 1000000007
#define int long long
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define FastHoviBaby ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);


int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }


int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}


bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}


int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}


bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}

int32_t main(){
FastHoviBaby

int n;
cin>>n;
string s;
cin>>s;

    int count=0;

    if(n==2 && s[0]==s[1]){
        cout<<1<<endl;
        if(s[0]=='B') cout<<'G';
        else if(s[0]=='R') cout<<'G';
        else if(s[0]=='G') cout<<'B';
        cout<<s[1];
        return 0;
    }

    for(int i=1;i<n-1;i++){
        if(s[i]==s[i+1] && s[i-1]==s[i]){
            if(s[i]=='B') s[i]='R';
            else if(s[i]=='R') s[i]='B';
            else if(s[i]=='G') s[i]='B';
            count++;
        }
        else if((s[i]==s[i-1] && s[i]!=s[i+1]) || (s[i]==s[i+1] && s[i]!=s[i-1])  && ((i+2<n && s[i+1]!=s[i+2]) || (i==n-2))){
            count++;
            if(s[i-1]=='R' && s[i+1]=='B') s[i]='G';
            else  if(s[i-1]=='R' && s[i+1]=='G') s[i]='B';
            else if(s[i-1]=='G' && s[i+1]=='B') s[i]='R';
            else  if(s[i-1]=='G' && s[i+1]=='R') s[i]='B';
            else  if(s[i-1]=='B' && s[i+1]=='R') s[i]='G';
            else  if(s[i-1]=='B' && s[i+1]=='G') s[i]='R';
        }
    }

    cout<<count<<endl;
    cout<<s;
return 0;
}
