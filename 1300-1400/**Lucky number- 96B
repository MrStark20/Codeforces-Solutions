#include <bits/stdc++.h>
using namespace std;
#define int long long
#define pi (3.141592653589)
#define mod 1000000007
#define int long long
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define FastHoviBaby ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);


int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }


int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}


bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}


int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}


bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}

int32_t main(){
FastHoviBaby

int n;
cin>>n; 

    string s=to_string(n);
    vector<int> check;


    int size=s.size();

    rep(i,(1<<size)){
        string t="";
         int c4=0,c7=0;
        rep(j,s.size()){
             if(i & (1<<j)) {
                t+='4'; c4++;
            }
            else {
                t+='7'; c7++;
            }
        }
        if(c4==c7)
        check.pb(stoll(t));
    }

    size++;

    rep(i,(1<<size)){
        string t="";
        int c4=0,c7=0;
        rep(j,size){
            if(i & (1<<j)) {
                t+='4'; c4++;
            }
            else {
                t+='7'; c7++;
            }
        }
        if(c4==c7)
        check.pb(stoll(t));
    }   
    size++;

     rep(i,(1<<size)){
        string t="";
        int c4=0,c7=0;
        rep(j,size){
            if(i & (1<<j)) {
                t+='4'; c4++;
            }
            else {
                t+='7'; c7++;
            }
        }
        if(c4==c7)
        check.pb(stoll(t));
    }

    sort(all(check));

    rep(i,check.size()){
        if(check[i]>=n ){
            cout<<check[i];
            break;
        }
    }



return 0;
}
