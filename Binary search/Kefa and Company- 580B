#include <bits/stdc++.h>
using namespace std;
#define int long long
#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define Jhunjhar_Hova ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);


int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }


int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}


bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}


int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}


bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}

int32_t main(){
Jhunjhar_Hova

int n,d;
cin>>n>>d;

 vector<pair<int,int>> a(n);
 vector<int> b(n);
 rep(i,n){
    cin>>a[i].ff>>a[i].ss;
    b[i]= a[i].ff;
 }
 sort(all(b));   
 sort(all(a));

 vector<int> pre(n);
 rep(i,n){
    pre[i]= (i>0 ? pre[i-1] : 0)+ a[i].ss;
 }
 int l=1, r=1e6 + 10;
 int mx=-1;
 
    rep(i,n){
      mx=max(mx, a[i].ss);  
    }

    rep(i,n){
        int x= a[i].ff+d-1;
        auto it= upper_bound(all(b), x);
        if(it == b.end()){
            int sum= pre[n-1] - (i>0 ? pre[i-1] : 0);
            mx=max(mx,sum);
        }
        else{
            int j= it-b.begin();
            j--;
            int sum= pre[j]- (i>0 ? pre[i-1] : 0);
            mx=max(mx, sum);
        }
    }

    cout<<mx<<endl;

return 0;
}
