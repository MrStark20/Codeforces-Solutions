#include <bits/stdc++.h>
using namespace std;
#define int long long
#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define Jhunjhar_Hova ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);
 
 
int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }
 
 
int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}
 
 
bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}
 
 
int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}
 
 
bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}
 
int32_t main(){
Jhunjhar_Hova
 
 
int t=1;
cin>>t;
while(t--){
 
        int n,s;
        cin>>n>>s;
    vector<int> a(n);
 
    rep(i,n) cin>>a[i];
 
    vector<int> pre(n,0), suf(n,0);
 
    pre[0]=a[0];
    for(int i=1;i<n; i++) pre[i]=pre[i-1] + a[i];
    suf[n-1]=a[n-1];
 
    rrep(i, n-1) suf[i]=suf[i+1]+a[i];
 
    if(pre.back()<s){
        cout<<-1<<endl;
        continue;
    }
    else if(pre.back()==s){
        cout<<0<<endl;
        continue;
    }
   
 
    int mi=INT_MAX;
    int del= pre.back()-s;
    int start=-1;
    int total= pre.back();
 
    rep(i,n){
        if(pre[i]==del){
            mi= (mi, i+1);
            start=i;
            break;
        }
    }
 
 
     rrep(i,n){
        if(suf[i]==del){
            mi= min(mi, (n-i));
            break;
        }
    }
 
 
    int j=n-1;
 
    for(int i=start-1; i>=0; i--){
        while(a[i]==0 && i>=0) i--;
        int flag=0;
 
        if(i<0) {
            flag=1;
            i=0;
            pre[i]=0;
            break;
        }
        
     
        while( suf[j]+pre[i]<del  )j--;
 
        if(j<0) break;
        if( suf[j]+pre[i]==del) mi= min(mi, ((flag==1? 0: i+1)+ (n-j)));
         
 
 
      
        if(flag) break;
        j--;
            
 
    }
 
   
 
    cout<<mi<<endl;
 
 
 
}
return 0;
}
