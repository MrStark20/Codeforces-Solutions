#include <bits/stdc++.h>
using namespace std;
#define int long long
#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define Jhunjhar_Hova ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);


int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }


int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}


bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first < b.first;  return a.second > b.second;}


int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}


bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}

int32_t main(){
Jhunjhar_Hova

int t=1;
cin>>t;
while(t--){
    
    int n, coins;
    cin>>n>>coins;

    vector<int> a(n);
    rep(i,n){
        cin>>a[i];
    } 

    ll ans=0;
    vector<pair<int,int>> b(n);

    rep(i,n){
        b[i].ss= i;

        b[i].ff = min(a[i]+i+1, a[i]+ (n-i));
    }
    sort(all(b));

    vector<int> pre(n);
    rep(i,n) {
        pre[i]= (i>0 ? pre[i-1] : 0) + b[i].ff;
    }

    ll mx=0;

    rep(i,n){
        if(coins< a[b[i].ss]+ b[i].ss+1 ) continue;

        ll c=coins;
        c-=a[b[i].ss]+ b[i].ss+1 ;
        ll f=0;

        auto it= upper_bound(all(pre), c) - pre.begin() ;    

        ll now=it;
        if(it< i ) {
            mx=max(mx, now+1);
        }else{
            f=1;
            c+= (b[i].ff); 
            auto it= upper_bound(all(pre), c) -pre.begin();
            ll now=it;
            mx= max(mx, now );
        }
    }
    cout<<mx<<"\n";
}
return 0;
}
