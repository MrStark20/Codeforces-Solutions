#include <bits/stdc++.h>
using namespace std;
#define int long long
#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define Jhunjhar_Hova ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);


int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }


int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}


bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}


int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}


bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}
vector<vector<int>> dp;
vector<pair<int,int>> rans;
int flag,mi;


int32_t main(){
Jhunjhar_Hova


int t=1;
cin>>t;
while(t--){

    flag=0; mi=INT_MAX;
    
    string s;
    cin>>s;

    

    int n;
    cin>>n;

    vector<string> a(n);
    rep(i,n) cin>>a[i];

    dp.assign(s.size()+1, vector<int>(n+1, -1) );

    vector<pair<int,int>> ans(102);

    int r= 0,  count=0;

    while(r<s.size()){
        int now= r;

      for(int i=0;i<=now&&r<s.size();i++){  
        rep(j, n){
            flag=0;
            if(i+a[j].size()<=r ||  i+ a[j].size()>s.size()) flag=1;

                for(int k=0 ;k<a[j].size()  && !flag ; k++){
                    if(s[i+k]!= a[j][k]) flag=1;
                }

                if(!flag){
                    
                    ans[count].ff=j;
                    ans[count].ss=i;
                    r=i+a[j].size();
                }
         }
      }
        if(now==r) break;
        count++;

    }
   
    if(r<s.size()){
        cout<<-1<<endl;
        continue;
    }
    cout<<count<<endl;
    rep(i, count){
        cout<<ans[i].ff+1<<" "<<ans[i].ss+1<<endl;
    }

   
    

}
return 0;
}
