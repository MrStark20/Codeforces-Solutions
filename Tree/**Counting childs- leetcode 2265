#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    
    vector<int> dis;
public:
    
    int count=0, child=0;
    
    int averageOfSubtree(TreeNode* root) {
        
        solve(root);
       
        return count;
      
        
    }
    
    void solve(TreeNode* root){
        
        if(root==NULL)
            return ;
        int f1=0;
        int t= averageOfSubtre(root, f1);
       
       
        if(t/(f1 ) == root->val) count++;
        
        
        solve(root->left);
        solve(root->right);
    }

    
    int averageOfSubtre(TreeNode* root, int& f1){
          ll sum=0, sumleft=0, sright=0;
        
        if(root==NULL)
            return 0;
        else{
            
            f1++;
            
                sumleft =  averageOfSubtre(root->left, f1);
         
                sright= averageOfSubtre(root->right, f1);
  
            
        }
        
           sum= root->val +sumleft+sright;
 
        
        return sum;
    }
    
    
    
   
  
};
