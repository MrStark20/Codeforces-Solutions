#include <bits/stdc++.h>
using namespace std;
#define int long long
#define pi (3.141592653589)
#define mod 1000000007
#define int long long
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define FastHoviBaby ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);


int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }


int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}


bool myComp(const pair<int, int>& a, const pair<int, int>& b){   return a.second < b.second;}


int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}


bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}

int32_t main(){
FastHoviBaby

int n,k;
cin>>n>>k;
int lec[n];
int t[n];
int s=0;
rep(i,n) cin>>lec[i];
rep(i,n) cin>>t[i];
vector<bool> b(100002, false);
    vector<pair<int,int>> v;
    rep(i,n){
        if(t[i]==0){
            v.pb(mp(lec[i], i));
            b[i]=true;
        }else
        s+=lec[i];
    }
    sort(all(v), myComp);
    int mx=0;
       
       int l=0,j=0, m=v.size(); int a=0;
       while(l<m && j<m){
           
           
           if(v[j].ss-v[l].ss>=k) a-=v[l].ff,l++;
           else a+=v[j].ff, j++;
            mx=max(a,mx);
      
       }

   cout<<s+mx<<endl;

return 0;
}
