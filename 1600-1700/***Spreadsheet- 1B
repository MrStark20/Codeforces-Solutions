#include <bits/stdc++.h>
using namespace std;
#define int long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define FastHoviBaby ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);
 
 
int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }
 
 
int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}
 
 
bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}
 
 
int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}
 
 
bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}
 
int32_t main(){
FastHoviBaby
 
 
int t=1;
cin>>t;
while(t--){
    string s;
    cin>>s;
    int n=s.size();

    
    vector<int> ch;
    for(int i=1;i<6;i++){
 
        ch.pb(npow(26,i));
    }

    int c1=0, d1=0, c2=0; 
 
 
    rep(i,n){
        if(isalpha(s[i])){
            c1=1;
        }
        if(c1==1 && c2==0 && isdigit(s[i]))
        d1=1;
        if(c1==1 && d1 && isalpha(s[i]) )
        c2=1;
    }
    if(c1 && c2 && d1 ){
        int row=0, j=0;
        string r="";
        rep(i,n){
            if((s[i])=='C') { j=i; break;}
            if(isdigit(s[i]))
            r+=s[i];
            
        }
        row=stoll(r);
 
        int col=0;
        string c="";
        for(int i=j+1;i<n;i++)
        c+=s[i];
        col=stoll(c); 
        
 
        string ans="";
      
        while(col>0){
            ans+= ('A' + (col-1)%26);
            if(!(col%26))
                col-=26;
 
                col/=26;
        }  
            reverse(all(ans));
        cout<<ans<<row<<endl;
 
    }
 
    else{
 
        string c="";
        int k=0;
        rep(i,n){
            if(isalpha(s[i]))
            c+=s[i];
            else{
                k=i;
            break;
            }
        }
        string r="";
        for(int i=k;i<n;i++)
        r+=s[i];
 
        int ans=0;
        int x=c.size();
        rep(i, c.size()){
            if(x-i!=1){
 
                ans+= npow(26, x-i-1) *((c[i]- 'A')+1 );
 
            }else{
                ans+= ((c[i]- 'A')+1);
            }
        }
      
        cout<<"R"<<r<<"C"<<ans<<endl;
    }
 
}
return 0;
}
