#include <bits/stdc++.h>
using namespace std;
#define int long long
#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define Jhunjhar_Hova ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);


int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }


int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}


bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}


int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}


bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}
int flag=0, ans=0;
bool dfs(int i, int j, vector<vector<char>> &g, vector<vector<bool>> &vis, int size, int parx, int pary ,int n, int m){

    
    if(g[i][j]=='S' ){
        if(size>=3)
        return true;

        return false;
    }
    vis[i][j]= true;


    int hehe=false;

    if(i+1<n  && (g[i+1][j]=='.' || g[i+1][j]=='S')  && !(i+1==parx && j==pary) && (!vis[i+1][j] ) ) hehe |= dfs(i+1, j, g, vis,size+1, i, j, n, m );
    if(i-1>=0  && (g[i-1][j]=='.' || g[i-1][j]=='S')   && !(i-1==parx && j==pary) && (!vis[i-1][j] ) ) hehe |=dfs(i-1, j, g, vis,size+1, i, j , n, m );
    if(j+1<m  && (g[i][j+1]=='.' || g[i][j+1]=='S')   && !(i==parx && j+1==pary) && (!vis[i][j+1]) ) hehe  |=dfs(i, j+1, g, vis,size+1, i, j , n, m );
    if(j-1>=0  && (g[i][j-1]=='.' || g[i][j-1]=='S')    && !(i==parx && j-1==pary) && (!vis[i][j-1] )  ) hehe |=dfs(i, j-1, g, vis,size+1 , i, j, n, m );
    
    return hehe;
}

int32_t main(){
Jhunjhar_Hova

int n, m;
cin>>n>>m;

    vector<vector<char>> g(n, vector<char>(m));
    vector<vector<bool>> vis;
    int s=-1,e=-1;
    rep(i,n){
        rep(j,m){
            cin>>g[i][j];
            if(g[i][j]=='S'){
                s=i, e=j;
            }
        }
    }

    int now= 0;
    vis.assign(n ,vector<bool>(m, false));

    if(s+1<n && g[s+1][e]=='.'){
     now |=   dfs(s+1, e, g, vis, 0, s, e, n, m);
    }
     if(s-1>=0 && g[s-1][e]=='.'){
     now |=   dfs(s-1, e, g, vis, 0, s, e, n, m);
    }
     if(e-1>=0 && g[s][e-1]=='.'){
     now |=   dfs(s, e-1, g, vis, 0, s, e, n, m);
     }
      if(e+1<m && g[s][e+1]=='.'){
     now  |=   dfs(s, e+1, g, vis, 0, s, e, n, m);
     }  

    if(now) cout<<"Yes"<<endl;
    else cout<<"No"<<endl;
 
return 0;
}
