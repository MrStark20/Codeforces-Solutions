#include <bits/stdc++.h>
using namespace std;
#define int long long
#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define FastHoviBaby ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);


int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }


int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}


bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}


int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}


bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}

int mi;
int n,x;

int a[501];


int32_t main(){
FastHoviBaby

int t=1;
cin>>t;
while(t--){
    
    
    cin>>n>>x;

    mi=INT_MAX;

    rep(i,n){
        cin>>a[i+1];
    }
    
    
    int move=0, count=0;

    int i=2; 
    while(i<=n){
        if(a[i]>=a[i-1]) { i++;}
        else{
            int j=i-1; move++;  
            while(j>=1 && a[j]>x && x<a[j-1]){
                j--;
            }
            if(j==0 ) {int temp= a[1];  a[1]= x; x=temp; i=2;}
            else {
                int temp= a[j];
                a[j]=x; 
                x=temp;
                i=j;
            }


        }
        count++; if(count==10000) break;  
    }
   if(count==10000) move=-1;     
  cout<<move<<endl;


}
return 0;
}
