#include <bits/stdc++.h>
using namespace std;
#define int long long
#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define Jhunjhar_Hova ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);


int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }


int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}


bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}


int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}


bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}

int32_t main(){
Jhunjhar_Hova


int t=1;
cin>>t;
while(t--){
    
    string s;
    cin>>s;

    int flag=0;

    int n=s.size();

    if(s.find('0')==-1 || s.find('1')==-1){
        cout<<0<<endl;
        continue;
    }

    vector<int> z(n,0), o(n,0);

    rep(i,n){

        if(s[i]=='1'){
            o[i]= (i-1>=0 ? o[i-1]:0)+1;
        }else o[i]= (i-1>=0 ? o[i-1]: 0);

        if(s[i]=='0'){
            z[i]=(i-1>=0? z[i-1] :0)+1;
        }else
        z[i]= (i-1>=0? z[i-1]: 0);
    }

    int zc=z.back();

    int mi=INT_MAX;

    vector<int> fclos1(n,-1);
    vector<int> bclos1(n,-1);

    int x=-1;
    rrep(i,n){
        if(s[i]=='1'){
            x=i;
        }else{
            fclos1[i]=x;
        }
    }
    x=-1;
    rep(i,n){
        if(s[i]=='1'){
            x=i;
        }else{
            bclos1[i]=x;
        }
    }



    int beh=n;
    for(int i=zc-1; i>=-1;i--){

        int ans=0,ans2=0;

        int start= (s[i+1]=='0' ? (fclos1[i+1]) : i+1);
        int end= n- (zc-(i+1));
        int end2=end;

        

        end2= (s[end2-1]=='0' ? bclos1[end2-1]: end2-1);

        ans+= (z[end2]- (start-1>=0 ? z[start-1] : 0));
       

        ans2= ((i>-1)? o[i]: 0)+ (end<n ? (o.back()- (end>0 ? o[end-1] : 0)) : 0 );


        mi=min(mi, max(ans,ans2));
    }

    cout<<mi<<endl;

}
return 0;
}
