#include <bits/stdc++.h>
using namespace std;
#define int long long
#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define Jhunjhar_Hova ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);


int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }


int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}


bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}


int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}


bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}

int32_t main(){
Jhunjhar_Hova


    
    int n;
    cin>>n;

    vector<int> a(n),b(n);
    map<int,int> u,d;
    rep(i,n){cin>>a[i]; u[a[i]]=i; }
    rep(i,n) {cin>>b[i]; d[b[i]]=i; }

    ll ans=1;
    int x= -1, y= n;

    ll lef= min(u[1], d[1]);
    ll rig= max(u[1], d[1]);
    x= lef, y=rig;
    y= n-y-1;
    ll mid= rig - lef-1;
    ans+= (x*(x+1))/2;
    ans+= (y*(y+1))/2;
    ans+= (mid*(mid+1))/2;

    
    for(int i=2; i<=n+1; i++){

        ll mi= min(u[i], d[i]);
        ll mx= max(u[i], d[i]);

        if( (mi>=lef && mi<=rig) || (mx>=lef && mx<=rig) ) {
            rig = max(rig, mx);
            lef= min(lef, mi);
            continue;
        }

        if(mi<lef && mx>rig) {
            ll lol= lef- mi;
            ll lmao= mx- rig;
            ans+= (lol * lmao);    

        }    
        else if(mx<lef){
            ll right= (n-rig);
            ll left= (lef-mx);
            ans+= (right*left);
        }
        else if(rig<mi ){
            ll left= lef+1;
            ll right= (mi- rig);
            ans+= (left*right);
        } 


        rig = max(rig, mx);
        lef= min(lef, mi); 

    }

    cout<<ans;

return 0;
}
