#include <bits/stdc++.h>
using namespace std;
#define int long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define FastHoviBaby ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);


int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }


int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}


bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}


int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}


bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}

int32_t main(){
FastHoviBaby

int n;
cin>>n;
    if(n==1){
            cout<<"a"<<"\n"<<"a"<<"\n"<<"c"<<"\n"<<"c"<<"\n";

    }

   int count=0;

   char g[4][n];
   memset(g, '*', sizeof g);

   while(count!=n-1){
       if(count%2==0){
            g[2][count]= 'a'+(count%26); g[2][count+1]= 'a'+ (count%26);
            g[3][count]= 'a' +((count+1)%26);  g[3][count+1]= 'a' +((count+1)%26);
       }
       if(count%2==1){
            g[0][count]= 'a'+(count%26); g[0][count+1]= 'a'+ (count%26);
            g[1][count]= 'a' +((count+2)%26);  g[1][count+1]= 'a' +((count+2)%26);
       }
       count++;
   }

    
        int x=0;
        char c= 'a'+x;
        while(c == g[2][0] || (n>=3 && ( c==g[0][1] || c== g[1][1]))){
                x++;
                c='a'+x;
        }   
        g[0][0]='a'+x;
        g[1][0]= 'a'+x;
    
        x=0;
        if(n%2==1){
             while( char('a'+x) == g[1][n-1] || char('a'+x)==g[2][n-2] || char('a'+ x)== g[3][n-2]) x++;

             g[2][n-1]= 'a'+x;
             g[3][n-1]= 'a'+x;
        }
        else{
            while(char('a'+x) == g[2][n-1] || char('a'+x)==g[0][n-2] || char('a'+ x)== g[1][n-2]) x++;

             g[0][n-1]= 'a'+x;
             g[1][n-1]= 'a'+x;
        }

        rep(i,4){
              rep(j,n){
              cout<<g[i][j];  
        } cout<<endl;
  } 

return 0;
}
