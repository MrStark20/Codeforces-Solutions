#include <bits/stdc++.h>
using namespace std;
#define int long long
#define pi (3.141592653589)
#define mod 1000000007
#define int long long
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define FastHoviBaby ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);


int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }


int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}


bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}


int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}


bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}

int32_t main(){
FastHoviBaby

int n;
cin>>n;
vector<int> a(n);
rep(i,n) cin>>a[i];
sort(all(a));
map<int,int> ml;
map<int,int>mm;
map<int,int> mr;
vector<int> l;
vector<int> m;
vector<int> r;

    rep(i,n/3){
        l.pb(a[i]);
        ml[a[i]]++;
    }
    for(int i=n/3;i< 2*(n/3);i++){
        m.pb(a[i]);
        if(ml[a[i]]>0) {
            cout<<-1<<endl;
            return 0;
        }
        mm[a[i]]++;
    }

    for(int i=2*(n/3);i<n;i++){
        r.pb(a[i]);
        if(ml[a[i]]>0 || mm[a[i]]>0){
            cout<<-1<<endl;
            return 0;
        }
        mr[a[i]]++;
    }
    if(count(all(a), 7)!=0 || count(all(a), 5)!=0|| count(all(l), 1)!=n/3 || (count(all(m), 2)+count(all(m),3)!=n/3)
     || (count(all(r),6)+ count(all(r),4)!=n/3) || (count(all(r),4)>count(all(m),2))){
        cout<<-1<<endl;
        return 0;
    }

    rep(i,n/3){
        cout<<l[i]<<" "<<m[i]<<" "<<r[i]<<endl;
    }


return 0;
}
