#include <bits/stdc++.h>
using namespace std;
#define int long long
#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define Jhunjhar_Hova ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);


int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }


int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}


bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}


int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}


bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}

int32_t main(){
Jhunjhar_Hova


int t=1;
cin>>t;
while(t--){
    
    int q;
    cin>>q;
    map<char,int> m1,m2;
    m1['a']++;m2['a']++;
    int s1=1, s2=1;
    rep(i,q){
        int d,k;
        cin>>d>>k;
        string s;
        cin>>s;

      

        rep(j,s.size()){
            if(d==1) {
                m1[s[j]]+=k;
            }else{
                m2[s[j]]+=k;
            }
        }

        int flag=0;

        int x=0,y=0;
        char mi='a',mx='a';

        rep(j,26){
            if(m1.find('a'+j)!=m1.end()){ mi= ('a'+j); break;}
        }
        rrep(j,26){
            if(m2.find('a'+j)!=m2.end()){ mx= ('a'+j); break;}
        }
        if(mi<mx){
            cout<<"YES"<<endl;
        }else if(mi>mx){
            cout<<"NO"<<endl;
        }else{
            int f1=0;
            for(int j=1;j<26;j++){
                if(m1.find('a'+j)!=m1.end()){ f1=1; break;}
            }
            if(m1[mi] < m2[mx] && !f1) cout<<"YES"<<endl;
            else cout<<"NO"<<endl;
        }

    } 
}
return 0;
}
