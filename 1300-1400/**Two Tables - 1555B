#include <bits/stdc++.h>
using namespace std;
#define int long long
#define pi (3.141592653589)
#define mod 1000000007
#define int long long
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define FastHoviBaby ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);


int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }


int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}


bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}


int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}


bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}

int32_t main(){
FastHoviBaby


int t=1;
cin>>t;
while(t--){
    int W,H, x1,y1, x2,y2;
    cin>>W>>H >>x1>>y1>>x2>>y2;

    int w,h; cin>>w>>h;

    if(W-(x2-x1)<w  && H-(y2-y1)<h  ) {cout<<-1<<endl; continue;}

    vector<int> ans;
    
    if(H-y2>=h) ans.pb(0);
    else if( y1- (h- (H-y2)) >=0)
        ans.pb( h- (H-y2));

    if(W-x2>=w) ans.pb(0);   
    else if(x1-(w-(W-x2))>=0 )    
    ans.pb( w-(W-x2));

    if(h<=y1) ans.pb(0);
    else if(y2+ h-y1<=H)
    ans.pb(h-y1);

    if(x1>=w) ans.pb(0);
    else if(x2+ (w-x1)<=W)
    ans.pb(w-x1);
    



    sort(all(ans));
    double now=0;

    for(auto i:ans) {
        if(i>=0){now=i;
        break;
        }
    }

    cout<<fixed<<setprecision(9)<<now<<endl;
    }
return 0;
}
