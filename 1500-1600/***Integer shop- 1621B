#include <bits/stdc++.h>
using namespace std;
#define int long long
#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define Jhunjhar_Hova ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);


int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }


int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}


bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}


int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}


bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}

struct hell{
    int l, r, cost;
};

int32_t main(){
Jhunjhar_Hova


int tt=1;
cin>>tt;
while(tt--){
    
    int n;
    cin>>n;

    map<pair<int,int>, int >m; 
    int l=INT_MAX, r=INT_MIN, cl=INT_MAX, cr=INT_MAX;

    while(n--){
        int x,y,c;
        cin>>x>>y>>c;

        if(m.find(mp(x,y)) == m.end()){
            m[mp(x,y)]=c;
        }else{
            m[mp(x,y)]= min(c, m[mp(x,y)]);
        }

        if(x==l){
            cl= min(c, cl);
        }
        if(x<l){
            l=x;
            cl=c;
        }
        if(r==y){
            cr=min(c,cr);
        }
        if(y>r){
            r=y;
            cr=c;
        }
       

        int ans=cl+cr;
        if(m.find(mp(l, r))!= m.end()){
            ans=min(ans, m[mp(l,r)]);
        }

        cout<<ans<<endl;


    }
}
return 0;
}
