#include <bits/stdc++.h>
using namespace std;
#define int long long
#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define Jhunjhar_Hova ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);


int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }


int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}


bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}


int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}


bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}
map<pair<int,int>, int> m1;
map<pair<int,int>, int> vis;
map<int,int> m2;

 void dfs(vector<vector<int>> &adj, int n, int limit){

    for(auto i: adj[n]){
        if(!vis[mp(n,i)]){
            
            if(m2[n]<limit && m2[i]<limit){
                if(m2[n]>=m2[i]){
                       m2[i]++;
                    m1[mp(n,i)]=-1; vis[mp(n,i)]=true;
                }
                else{
                    m2[n]++;
                m1[mp(n,i)]=1;  vis[mp(n,i)]=true;
                }
            }
            else if(m2[n]<limit){
                m2[n]++;
                m1[mp(n,i)]=1;  vis[mp(n,i)]=true;
            }else if(m2[i]<limit){
                m2[i]++;
                m1[mp(n,i)]=-1; vis[mp(n,i)]=true;
            }

            dfs(adj, i, limit);
        
        }
    }
    // for(auto i: m1){
    //     cout<<i.ff.ff<<" "<<i.ff.ss<<" "<<i.ss<<endl;
    // }cout<<endl;
 }

int32_t main(){
Jhunjhar_Hova


int t=1;
cin>>t;
while(t--){
    
    int n;
    cin>>n;

    m1.clear(); m2.clear(); vis.clear();


    int nn= (n*(n-1))/2;
    vector<pair<int,int>> a( (int)nn+1);

    int count=1;
    for(int i=1;i<=n-1; i++){
        for(int j=i+1;j<=n; j++){
            pair<int,int> p= {i,j};
           a[count]=p;
           count++;
        }
    }

    map<int,int> m;

    vector<int> ans(nn+1, -1);

    int limit=nn/n;

    if(n%2){
       
        int k=1;
        for(int i=1;i<=nn; i++){
            if(m[a[i].ff] < limit){
                ans[k]=1;
                m[a[i].ff]++;

            }else{
                ans[k]=-1;
                m[a[i].ss]++;
            }
            k++;
        }
       
       for(int i=1;i<=nn;i++) cout<<ans[i]<<" "; cout<<endl;

       continue;
    }

    for(int i=1;i<=n;i++){
        for(int j=i+1;j<=n;j++){
            if(j-i <n/2) cout<<1<<" ";
            else if(j-i == n/2) cout<<0<<" ";
            else cout<<-1<<" ";
        }
    }
    cout<<endl;
}


return 0;
}
