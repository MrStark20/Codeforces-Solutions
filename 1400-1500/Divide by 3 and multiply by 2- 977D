#include <bits/stdc++.h>
using namespace std;
#define int long long
#define pi (3.141592653589)
#define mod 1000000007
#define int long long
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define FastHoviBaby ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);


int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }


int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}


bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}


int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}


bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}

vector<int> adj[105];
bool vis[105];
map<int,int> m;
map<int,int> m2;
int a[105];
int flag=0;

void dfs(int n){
    vis[n]=true;
    if(flag) cout<<a[n]<<" ";

    for(auto child: adj[n]){
        if(!vis[child]){
            dfs(child);
        }
    }
}

int32_t main(){
FastHoviBaby

int n;
cin>>n;
    

    rep(i,n){
        cin>>a[i];
    }
    sort(a,a+n);
    rep(i,n) {m[a[i]]++; m2[a[i]]=i; }  

    rep(i,n){
         if(a[i]%3==0 && m[a[i]/3]>0){ adj[i].pb(m2[a[i]/3]);  }
            if(m[a[i]*2]>0)
            adj[i].pb(m2[a[i]*2]);

        
    }



    int x=0;
    
  
    while(true){
       memset(vis,false, sizeof vis);
       if(adj[x].size()==0){ x++; continue;}
        dfs(x);
        int flag=0;
        rep(i,n){
          if(!vis[i])  
            {flag=1; break;}
        }
    if(flag) x++;
    else break;
    }
     memset(vis,false, sizeof vis);
    flag=1;
    dfs(x);

    

return 0;
}
