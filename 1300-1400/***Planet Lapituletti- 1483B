#include <bits/stdc++.h>
using namespace std;
#define int long long
#define pi (3.141592653589)
#define mod 1000000007
#define int long long
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define FastHoviBaby ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);


int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }


int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}


bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}


int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}


bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}
int image(int x){

          if(x==0)return 0;
          if(x==1) return 1;
          if(x==2)return 5;
          if(x==5) return 2;
          if(x==8) return 8;
          return -1;
}     

int32_t main(){
FastHoviBaby


int t=1;
cin>>t;
while(t--){
      int h,m;
      cin>>h>>m;

      string s;
      cin>>s;

      int a=stoll(s.substr(0,2));  
      int b=stoll(s.substr(3,5));

     string ans="52108";
     int flag=0;
     string aa,bb; int count=0;

     while(true){

         if(a<=h){
             if(b<=m){
                    aa= to_string(a);
                    bb=to_string(b);   

                 if( ans.find(aa[0])!= -1 && ans.find(bb[0])!=-1 ){
                     if((aa.size()==2 && ans.find(aa[1])!=-1  && bb.size()==1) || (aa.size()==1 && bb.size()==2 && ans.find(bb[1])!=-1 ) ||
                      (aa.size()==2 && bb.size()==2 && ans.find(aa[1])!=-1 && ans.find(bb[1])!=-1) || (aa.size()==1 && bb.size()==1) ){
                   
                     if(a<10){ 
                         aa.insert(aa.begin(),'0');
                     } 
                     if(b<10){
                         bb.insert(bb.begin(),'0');   
                     }

                     string now1=bb;

                     string mintoh= to_string(image(bb[1]-'0'))+  to_string(image(bb[0]-'0'));
                     string htomin= to_string(image(aa[1]-'0'))+ to_string(image(aa[0]-'0'));


                     if(stoll(mintoh)<h && stoll(htomin)<m){

                     flag=1;
                     break;
                     }

                     if(!flag)b++;

                   
                 }
                 else b++;
                 }
                 else b++;
                 
                 if(b==m)
                     b=0,a++;
                  
             }
             if(a==h) a=0;

         }
         if(flag) break;
     }
     

     cout<<aa<<":"<<bb<<endl;   
}
return 0;
}
