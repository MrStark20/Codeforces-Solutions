#include <bits/stdc++.h>
using namespace std;
#define int long long
#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define FastHoviBaby ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);


int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }


int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}


bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}


int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}


bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}
int n;
bool check(int m, int mx, vector<int>& a){
    vector<int> need(n);
    int o= (m+1)/2, e=m/2;
    int k=e;
    int sum=0; 
    rep(i,n){
        need[i]= mx-a[i];
    }
    rep(i,n){
        int x=min( (need[i]/2), e );
        need[i]-= x*2;
        sum+=need[i];
        e-=x;
    }
    if(sum<=o) return true;
    sum=0;
     rep(i,n){
        need[i]= (mx+1)-a[i];
    }
    rep(i,n){
        int x=min((need[i]/2), k );
        need[i]-= x*2;
        sum+=need[i];
        k-=x;
    }
    if(sum<=o) return true;
    return false;
}

int32_t main(){
FastHoviBaby


int t=1;
cin>>t;
while(t--){
    
    cin>>n;
    int mx=INT_MIN;

    vector<int> a(n), b(n);
    int uu=0;    

    rep(i,n){
        cin>>a[i];
        b[i]=a[i];
       if(a[i]>mx){mx=a[i]; uu=i;}
    }
    if(n==1){
        cout<<0<<endl;
        continue;
    }

   
    
   
    int l=0,r= 1e16;
    while(r-l>1){
        int mid=(l+r)/2;
       if(check(mid, mx, a))
            r=mid;
            else l=mid;
    }
    
    if(check(l,mx, a))
    cout<<l<<endl;
    else cout<<r<<endl;
}
return 0;
}
