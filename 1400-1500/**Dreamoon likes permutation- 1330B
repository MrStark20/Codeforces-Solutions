#include <bits/stdc++.h>
using namespace std;
#define int long long
#define pi (3.141592653589)
#define mod 1000000007
#define int long long
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define FastHoviBaby ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);


int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }


int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}


bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}


int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}


bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}

int32_t main(){
FastHoviBaby


int t=1;
cin>>t;
while(t--){
    int n;
    cin>>n;

    int a[n];
    int b[n];
    int c[n];
    map<int,int> fre;
    vector<int> chec;
    int pre=0, mx=INT_MIN,j=0;
    rep(i,n){
        cin>>a[i];  b[i]=a[i];  c[i]=a[i];
        fre[a[i]]++;
        if(fre[a[i]]==2) pre++;
        if(a[i]>mx) {mx=a[i]; j=i;}
    }
    int inif=0;
    for(int i=1; i<=mx;i++){
        if(fre[i]==0){
            inif=1;
            break;
        }
    }
    if(inif){
        cout<<0<<endl;
        continue;
    }
    sort(b,b+mx);
    sort(b+mx, b+n, greater<int>());
    int k=1, fro=0, ba=0;
    rep(i,mx){
        if(b[i]!=k) { fro=1; break;}
        else k++;
    }   
        
        k=1;
     for(int i=n-1;i>=mx;i--){
        if(b[i]!=k) { fro=1; break;}
        else k++;
    } 
    sort(c, c+(n-mx));
    sort(c+n-mx, c+n, greater<int>());
    int k2=1;
    
    rep(i,n-mx){
        if(c[i]!=k2) { ba=1; break;}
        else k2++;
    } 
        
        k2=1; 
     for(int i=n-1; i>= (n-mx);i--){
        if(c[i]!=k2) { ba=1; break;}
        else k2++;
    }
    
    if(fro && ba){
        cout<<0<<endl;
        continue;
    }

   


    int ans=0, l1=0,l2=0,count=0,flag=0;
    
    if(!fro && !ba &&  k2-1!=k-1){
        cout<<2<<endl;
        cout<<n-k+1<<" "<<k-1<<endl;
        cout<<n-k2+1<<" "<<k2-1<<endl;
    }else if( !fro){
        cout<<1<<endl;
        cout<<n-k+1<<" "<<k-1<<endl;
    }else if(!ba){
        cout<<1<<endl;
        cout<<n-k2+1<<" "<<k2-1<<endl;
    }else
    cout<<0<<endl;
}
return 0;
}
