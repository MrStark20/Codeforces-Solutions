#include <bits/stdc++.h>
using namespace std;
#define int long long
#define ll long long
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define Jhunjhar_Hova ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);


int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }


int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}


bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}


int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}


bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}
vector<vector<int>> dp;

bool recur(int i ,int j, vector<string> &a, int m, int pi, int pj ){

    if(j>=m) return true;

    if(dp[i][j]!=-1) return dp[i][j];


    if(a[i][j]=='W' ) return dp[i][j]=false;

    if(a[i^1][j]=='B' && (i^1)!=pi && j!=pj)
        return dp[i][j] = recur(i^1, j, a, m, i, j) ;


    return dp[i][j] = recur(i,j+1, a, m, i, j );
}


int32_t main(){
Jhunjhar_Hova


int t=1;
cin>>t;
while(t--){
    int m;
    cin>>m;

     dp.assign(2, vector<int>(m+1, -1));

    vector<string> a(2);
    rep(i,2){
        cin>>a[i];
    } 

   
    int f1= recur(0, 0, a, m, -1,-1);
    dp.assign(2, vector<int>(m+1, -1));
    int f2= recur(1, 0, a, m, -1,-1);
    
    
    if(f1 || f2) {
        cout<<"YES"<<endl;
    }
    else cout<<"NO"<<endl;
}
return 0;
}
