#include <bits/stdc++.h>
using namespace std;
#define int long long
#define pi (3.141592653589)
#define mod 1000000007
#define int long long
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define FastHoviBaby ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);


int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }


int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}


bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}


int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}


bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}

int32_t main(){
FastHoviBaby

int n;
cin>>n;
string s;
cin>>s;

    int argb=0,arbg=0, abgr=0,abrg=0, agbr=0, agrb=0;

    string rgb=s;
    rep(i,n){
        if(i%3==0 && rgb[i]!='R'){
            rgb[i]='R';
            argb++;
        }else if(i%3==1 && rgb[i]!='G'){
            rgb[i]='G';
            argb++;
        }else if(i%3==2 && rgb[i]!='B'){
            rgb[i]='B';
            argb++;
        }
    }
    string rbg=s;
      rep(i,n){
        if(i%3==0 && rbg[i]!='R'){
            rbg[i]='R';
            arbg++;
        }else if(i%3==1 && rbg[i]!='B'){
            rbg[i]='B';
            arbg++;
        }else if(i%3==2 && rbg[i]!='G'){
            rbg[i]='G';
            arbg++;
        }
    }

    string bgr=s;
    rep(i,n){
        if(i%3==0 && bgr[i]!='B'){
            bgr[i]='B';
            abgr++;
        }else if(i%3==1 && bgr[i]!='G'){
            bgr[i]='G';
            abgr++;
        }else if(i%3==2 && bgr[i]!='R'){
            bgr[i]='R';
            abgr++;
        }
    }
    string brg=s;
    rep(i,n){
        if(i%3==0 && brg[i]!='B'){
            brg[i]='B';
            abrg++;
        }else if(i%3==1 && brg[i]!='R'){
            brg[i]='R';
            abrg++;
        }else if(i%3==2 && brg[i]!='G'){
            brg[i]='G';
            abrg++;
        }
    }
    string gbr=s;
    rep(i,n){
        if(i%3==0 && gbr[i]!='G'){
            gbr[i]='G';
            agbr++;
        }else if(i%3==1 && gbr[i]!='B'){
            gbr[i]='B';
            agbr++;
        }else if(i%3==2 && gbr[i]!='R'){
            gbr[i]='R';
            agbr++;
        }
    }
    string grb=s;
    rep(i,n){
        if(i%3==0 && grb[i]!='G'){
            grb[i]='G';
            agrb++;
        }else if(i%3==1 && grb[i]!='R'){
            grb[i]='R';
            agrb++;
        }else if(i%3==2 && grb[i]!='B'){
            grb[i]='B';
            agrb++;
        }
    }

    vector<pair<int,string>> ans;
    ans.pb(mp(agbr, gbr));
    ans.pb(mp(agrb, grb));
    ans.pb(mp(abrg, brg));
    ans.pb(mp(abgr, bgr));
    ans.pb(mp(arbg, rbg));
    ans.pb(mp(argb, rgb));

    sort(all(ans));
    cout<<ans[0].ff<<"\n"<<ans[0].ss<<endl; 

return 0;
}
