#include <bits/stdc++.h>
using namespace std;
#define int long long
#define pi (3.141592653589)
#define mod 1000000007
#define int long long
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define FastHoviBaby ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);


int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }


int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}


bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}


int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}


bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}

int32_t main(){
FastHoviBaby

int n;
cin>>n;
  unordered_map<int,int> m;
     int flag1=0,f2=0,f21=0,s=0,r=0,fi=0,sc=0,ans=0, sq=0,rc=0;

  int a[n];
  rep(i,n){
      cin>>a[i];
      m[a[i]]++;
       if(m[a[i]]%4==0) sq++;
        if(m[a[i]]%2==0){ rc++; }
  } 
  
  int q;
  cin>>q;
  while(q--){
      char c; cin>>c; 
      int x; cin>>x;   
        if(c=='+') m[x]++;
        else m[x]--;
        

        if(c=='+'){
            if(m[x]%4==0) sq++;
            if(m[x]%2==0) rc++;
        }else{
            if(m[x]%4!=0 && (m[x]+1)%4==0) sq--;
            if(m[x]%2!=0 && (m[x]+1)%2==0) rc--;
        }

        if((sq>=2) || (sq==1 && rc>=4)) cout<<"YES"<<endl;
        else cout<<"NO"<<endl;
     
  
  }

return 0;
}
