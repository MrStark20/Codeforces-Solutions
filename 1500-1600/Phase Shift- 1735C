#include <bits/stdc++.h>
using namespace std;
#define int long long
#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define Jhunjhar_Hova ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);


int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }


int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}


bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}


int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}


bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}

bool check(vector<char> &pre, vector<char> &suf, int start, char fin  ){

        int lol=start;
        int now=0;
    while(pre[start]!='*' && now<26){
        
        if(pre[start]==fin){
            return false;
           
            
        }
         start= pre[start]-'a';
    }
    start=lol;
    now=0;
     while(suf[start]!='*' && now<26){
        
        if(suf[start]==fin){
            return false;
            
        }
        start= suf[start]-'a';
        now++;
    }

    return true;
} 

int32_t main(){
Jhunjhar_Hova


int t=1;
cin>>t;
while(t--){
    int n;
    cin>>n;

    string s;
    cin>>s;

    vector<char> pre(26, '*'), suf(26,'*');

    rep(i,n){
        if(pre[s[i]-'a'] == '*' ){

            rep(j, 26){
                if( ('a'+j) == s[i]) continue;
                else if(suf[j]=='*' && check(pre, suf, s[i]-'a' , 'a'+j )){
                    suf[j]=s[i];
                    pre[s[i]- 'a'] = ('a' + j);
                    break;
                }
                else if(suf[j]==s[i]){
                    pre[s[i]-'a'] = ('a' + j);
                }
            }

        }
    }

    rep(i,26){
        if(suf[i]=='*' && pre[i]!='*'){
             
            rep(j,26){
                if(pre[j]=='*' && suf[j]!='*'){
                  
                    if(!check(pre,suf, i, ('a'+j))){
                        suf[i]=('a'+j);
                        pre[j]=('a'+i);
                        break;
                    }
                }
            }
        }
    }


    string ans="";
    rep(i,n){
        ans+= (pre[s[i]-'a']);
    }
    cout<<ans<<endl;
}
return 0;
}
