//////////////////////////Copied from geeks for geeks- header


// C++ program to demonstrate the
// ordered set in GNU C++
#include <iostream>
using namespace std;
  
// Header files, namespaces,
// macros as defined above
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
  
#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>
  
using namespace __gnu_pbds;
#define int long long
#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
#define Jhunjhar_Hova ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);


int npow(int a, int b) { 
if(b==0) return 1;   int res= npow(a, b/2);
if(b%2!=0) return res*res*a;       else return res*res; }


int modp(int a,int b,int m){ 
 a %= m;     int res = 1;  while (b > 0) { if (b & 1)    res = res * a % m;      a = a * a % m;  b >>= 1; }
return res;}


bool myComp(const pair<int, int>& a, const pair<int, int>& b){ if (a.first != b.first)  return a.first > b.first;  return a.second < b.second;}


int gcd(int a , int b)
{
if(b==0) return a;
a%=b;
return gcd(b,a);
}


bool isPrime(int n){
    if(n==1) return false;
    if(n==2) return true;
    for(int i=2;i*i<=n;i++){
        if(n%i==0)return false;
    }
    return true;
}

    
  

int32_t main(){
Jhunjhar_Hova

int n, q;
cin>>n>>q;
map<int,int> row, col;

ordered_set r, c;



 while(q--){
     int t;
     cin>>t;

        

     if(t==1){
         int x,y; cin>>x>>y;

         row[x]++; col[y]++; 
         r.insert(x); c.insert(y);
     }
     else if(t==2){
         int x,y;
         cin>>x>>y;

         row[x]--; col[y]--;
         if(row[x]==0) r.erase(x);
         if(col[y]==0) c.erase(y);
     }
     else{

         int x1, y1,x2,y2; cin>>x1>>y1>>x2>>y2;

         int flag=0;

         int g= r.order_of_key(max(x1,x2));
         int h= r.order_of_key(min(x1,x2));

         
         if(g-h == max(x1,x2)- min(x2,x1) && row[x1]>0 && row[x2]>0) { cout<<"Yes"<<endl; continue;}
         else flag=0;

              g= c.order_of_key(max(y1,y2));
          h= c.order_of_key(min(y1,y2));
         
         if(g-h ==  max(y1,y2)- min(y2,y1) && col[y1]>0 && col[y2]>0 ) { cout<<"Yes"<<endl; continue;}   
            else cout<<"No"<<endl;
     }
 }   

return 0;
}
